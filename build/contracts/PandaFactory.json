{
  "contractName": "PandaFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_PAIR_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol\":\"PandaFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaERC20.sol\":{\"keccak256\":\"0xa1a89db8164ad4a41a7e71a61470dfb6390e7da86c95c8b04c958cb8410d0f5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a17a5db86bdb0a648a05fe073b34e064783699a8b6305645e0988306d63a765\",\"dweb:/ipfs/QmTMV5t56ywW5FkE9dtUiP4NBqEoA7W1Vx5SzzMzY6Xqkj\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol\":{\"keccak256\":\"0x6926d0e01bfa633304c8f8b5811045a4efe502362471b21ff6746b05d4ef6f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://885b0f21f864afcfb3ee698e4f783a3fc660aae57007f6ca34d4c40b66004957\",\"dweb:/ipfs/QmWoooRgXxbqcTR3fXzubfaWh3WwRrrJPWMfmVccfFs8iD\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol\":{\"keccak256\":\"0xee597aa64d125861e2e7c1edc40a198d9cdddad4f40fb012e3de7ea17f093612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e516315a53b3b7c5f4749fcafdfc6a0b413ae9e76d38f2a912989b3b1c609e\",\"dweb:/ipfs/QmU7V6UxmPbUNLYFW6Kth5aHnH1cSqb9rZcGFKBprJNdGM\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaCallee.sol\":{\"keccak256\":\"0xfc64b114936d608f6f89ddbed3f206bc752d653cabdec7976ad5c15d16b50f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ebca9fa455d189ec5b5107feb082dea8af8952eaddc995ee505c5a25026a441\",\"dweb:/ipfs/QmYnbY37caBZGcTh9KDpB2xxSLMGuM4cWtVmGs3rmoJ69g\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaERC20.sol\":{\"keccak256\":\"0x29c6742e1ec24dbd1fcc441eb2aae503a487b22ee1f15b212a334fce4ab2ef63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://929250ce66c72eb1c9f107f50a1503e6252c15011266f51003f93bbc4ce7ea41\",\"dweb:/ipfs/QmRXi1nvzcXG28WrSMiNd5XKwStBEufZ1drzw9dkpRwEho\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol\":{\"keccak256\":\"0x464ba64a612ab62f02190bb7354eb40e314e159bec1a2b91b5f2c2d497d04ba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76ab85d1f7f865f6b74fb585739bcdd412108bd1547a2b80ea4b3e8ad17399df\",\"dweb:/ipfs/QmTSs4UWPDBVfGnYPP3ZLmo5yJjR8cpg6emfAdMvdpU88t\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaPair.sol\":{\"keccak256\":\"0x55b2383fb9c8ffc57c2a91b9f033fc7bb79aeeee8ca76ca9a72bb7c816111e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52b205b3479d0ae9a27238dbd950cb300bd907668f4c6c0e9815baaa94d05e34\",\"dweb:/ipfs/Qman1zzGwqhwz3mh5gAbSppBqrfWtCM48obzVPxrw2Z8sa\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/libraries/Math.sol\":{\"keccak256\":\"0x1d3a60ce93c644abc23df956f8920e0b505ffc2fe68e7fff468b1df144eee981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://648f3c6efa4ce6041958d35b8141ba858562058593d08baebd6e46e22f830012\",\"dweb:/ipfs/QmUBcA2s2ZTPC9Yho5jRENzVq2YwmxgJm5HAm8ewJ7jc3i\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/libraries/SafeMath.sol\":{\"keccak256\":\"0xbad4e95c9ef7c13b42c1bfdc2e3be5b6c9867312de6755dad48efdfe44afa437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55389b396c49f13967700c524029ba5de7a1653e438dff386b3635ee49aaf98e\",\"dweb:/ipfs/QmdRLEtkzuakbpkWDeLMqx41Rko7SNfHTMq7f9vsEHwjw4\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/libraries/UQ112x112.sol\":{\"keccak256\":\"0x450ceb0b1d7a2e96d9e09da205c0b28c577fb33c98fde4985ddf13af28c3a3a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5893f7b50e7465e3733874700b237341fbf3f6eaee2dd061c535b758b60627b9\",\"dweb:/ipfs/QmNY53c5aCt3Rv8fcf9cx2CibYZ8GsmcYoPSbh1skANW3p\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620053da380380620053da83398181016040528101906100349190610090565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610102565b60008151905061008a816100eb565b92915050565b6000602082840312156100a257600080fd5b60006100b08482850161007b565b91505092915050565b60006100c4826100cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f4816100b9565b81146100ff57600080fd5b50565b6152c880620001126000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c80635855a25a116200006f5780635855a25a1462000141578063a2e74af61462000163578063c9c653961462000183578063e6a4390514620001b9578063f46901ed14620001ef57620000a0565b8063017e7e5814620000a5578063094b741514620000c75780631e3dd18b14620000e9578063574f2ba3146200011f575b600080fd5b620000af6200020f565b604051620000be919062000c87565b60405180910390f35b620000d162000233565b604051620000e0919062000c87565b60405180910390f35b62000107600480360381019062000101919062000af1565b62000259565b60405162000116919062000c87565b60405180910390f35b6200012962000299565b60405162000138919062000da3565b60405180910390f35b6200014b620002a6565b6040516200015a919062000cfe565b60405180910390f35b6200018160048036038101906200017b919062000a84565b620002f7565b005b620001a160048036038101906200019b919062000ab0565b620003ce565b604051620001b0919062000c87565b60405180910390f35b620001d76004803603810190620001d1919062000ab0565b62000930565b604051620001e6919062000c87565b60405180910390f35b6200020d600480360381019062000207919062000a84565b62000972565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200026a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b60405180602001620002b89062000a48565b6020820181038252601f19601f82011660405250604051602001620002de919062000c6e565b6040516020818303038152906040528051906020012081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200038a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003819062000d3d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004399062000d5f565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200048157838562000484565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620004fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004f29062000d81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000609576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006009062000d1b565b60405180910390fd5b6000604051806020016200061d9062000a48565b6020820181038252601f19601f820116604052509050600083836040516020016200064a92919062000c3e565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401620006ab92919062000ca4565b600060405180830381600087803b158015620006c657600080fd5b505af1158015620006db573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200091e92919062000cd1565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000a05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009fc9062000d3d565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6143208062000f7383390190565b60008135905062000a678162000f3e565b92915050565b60008135905062000a7e8162000f58565b92915050565b60006020828403121562000a9757600080fd5b600062000aa78482850162000a56565b91505092915050565b6000806040838503121562000ac457600080fd5b600062000ad48582860162000a56565b925050602062000ae78582860162000a56565b9150509250929050565b60006020828403121562000b0457600080fd5b600062000b148482850162000a6d565b91505092915050565b62000b288162000de7565b82525050565b62000b4362000b3d8262000de7565b62000e65565b82525050565b62000b548162000dfb565b82525050565b600062000b678262000dc0565b62000b73818562000dcb565b935062000b8581856020860162000e2f565b80840191505092915050565b600062000ba060128362000dd6565b915062000bad8262000e9a565b602082019050919050565b600062000bc760108362000dd6565b915062000bd48262000ec3565b602082019050919050565b600062000bee601a8362000dd6565b915062000bfb8262000eec565b602082019050919050565b600062000c1560138362000dd6565b915062000c228262000f15565b602082019050919050565b62000c388162000e25565b82525050565b600062000c4c828562000b2e565b60148201915062000c5e828462000b2e565b6014820191508190509392505050565b600062000c7c828462000b5a565b915081905092915050565b600060208201905062000c9e600083018462000b1d565b92915050565b600060408201905062000cbb600083018562000b1d565b62000cca602083018462000b1d565b9392505050565b600060408201905062000ce8600083018562000b1d565b62000cf7602083018462000c2d565b9392505050565b600060208201905062000d15600083018462000b49565b92915050565b6000602082019050818103600083015262000d368162000b91565b9050919050565b6000602082019050818103600083015262000d588162000bb8565b9050919050565b6000602082019050818103600083015262000d7a8162000bdf565b9050919050565b6000602082019050818103600083015262000d9c8162000c06565b9050919050565b600060208201905062000dba600083018462000c2d565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600062000df48262000e05565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000e4f57808201518184015260208101905062000e32565b8381111562000e5f576000848401525b50505050565b600062000e728262000e79565b9050919050565b600062000e868262000e8d565b9050919050565b60008160601b9050919050565b7f50616e64613a20504149525f4558495354530000000000000000000000000000600082015250565b7f50616e64613a20464f5242494444454e00000000000000000000000000000000600082015250565b7f50616e64613a204944454e544943414c5f414444524553534553000000000000600082015250565b7f50616e64613a205a45524f5f4144445245535300000000000000000000000000600082015250565b62000f498162000de7565b811462000f5557600080fd5b50565b62000f638162000e25565b811462000f6f57600080fd5b5056fe60c06040526001600a553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600b81526020017f50616e63616b65204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf9594939291906200015d565b6040516020818303038152906040528051906020012060808181525050503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505062000202565b6200013581620001ba565b82525050565b6200014681620001ce565b82525050565b6200015781620001f8565b82525050565b600060a0820190506200017460008301886200013b565b6200018360208301876200013b565b6200019260408301866200013b565b620001a160608301856200014c565b620001b060808301846200012a565b9695505050505050565b6000620001c782620001d8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60805160a05160601c6140e06200024060003960008181610eb501528181611b990152612803015260008181610e910152611c2801526140e06000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c3919061303c565b61054f565b005b6101d2610bbf565b6040516101df91906135e2565b60405180910390f35b6101f0610bf8565b6040516101ff9392919061382d565b60405180910390f35b610222600480360381019061021d9190612fae565b610c55565b60405161022f9190613506565b60405180910390f35b610240610c6c565b60405161024d9190613474565b60405180910390f35b61025e610c92565b60405161026b9190613864565b60405180910390f35b61028e60048036038101906102899190612ec1565b610c98565b60405161029b9190613506565b60405180910390f35b6102ac610e63565b6040516102b99190613521565b60405180910390f35b6102ca610e8a565b6040516102d791906138ed565b60405180910390f35b6102e8610e8f565b6040516102f59190613521565b60405180910390f35b61031860048036038101906103139190612e85565b610eb3565b005b610322610fc7565b60405161032f9190613864565b60405180910390f35b610340610fcd565b60405161034d9190613864565b60405180910390f35b610370600480360381019061036b9190612e33565b610fd3565b60405161037d9190613864565b60405180910390f35b6103a0600480360381019061039b9190612e33565b6113db565b6040516103ad9190613864565b60405180910390f35b6103be6113f3565b6040516103cb9190613864565b60405180910390f35b6103ee60048036038101906103e99190612e33565b6113f9565b6040516103fb9190613864565b60405180910390f35b61041e60048036038101906104199190612e33565b611411565b60405161042c92919061387f565b60405180910390f35b61043d6118f7565b60405161044a91906135e2565b60405180910390f35b61046d60048036038101906104689190612fae565b611930565b60405161047a9190613506565b60405180910390f35b61048b611947565b6040516104989190613864565b60405180910390f35b6104bb60048036038101906104b69190612e33565b61194d565b005b6104c5611b97565b6040516104d29190613474565b60405180910390f35b6104e3611bbb565b6040516104f09190613474565b60405180910390f35b610513600480360381019061050e9190612f10565b611be1565b005b61052f600480360381019061052a9190612e85565b611e27565b60405161053c9190613864565b60405180910390f35b61054d611e4c565b005b6001600a5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b906137c4565b60405180910390fd5b6000600a8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190613784565b60405180910390fd5b6000806105f5610bf8565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e906136e4565b60405180910390fd5b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906137e4565b60405180910390fd5b60008b111561077457610773828a8d61203b565b5b60008a111561078957610788818a8c61203b565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff16636d4117b1338d8d8c8c6040518663ffffffff1660e01b81526004016107d69594939291906134b8565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190613474565b60206040518083038186803b15801561085a57600080fd5b505afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190613013565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108cd9190613474565b60206040518083038186803b1580156108e557600080fd5b505afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d9190613013565b92505050600089856dffffffffffffffffffffffffffff1661093f9190613abe565b831161094c576000610974565b89856dffffffffffffffffffffffffffff166109689190613abe565b836109739190613abe565b5b9050600089856dffffffffffffffffffffffffffff166109949190613abe565b83116109a15760006109c9565b89856dffffffffffffffffffffffffffff166109bd9190613abe565b836109c89190613abe565b5b905060008211806109da5750600081115b610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090613704565b60405180910390fd5b6000610a55610a326002856121c590919063ffffffff16565b610a476103e8886121c590919063ffffffff16565b61223290919063ffffffff16565b90506000610a93610a706002856121c590919063ffffffff16565b610a856103e8886121c590919063ffffffff16565b61223290919063ffffffff16565b9050610add620f4240610acf896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6121c590919063ffffffff16565b610af082846121c590919063ffffffff16565b1015610b31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2890613744565b60405180910390fd5b5050610b3f8484888861228b565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610ba294939291906138a8565b60405180910390a35050505050506001600a819055505050505050565b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b6000806000600660009054906101000a90046dffffffffffffffffffffffffffff1692506006600e9054906101000a90046dffffffffffffffffffffffffffff1691506006601c9054906101000a900463ffffffff169050909192565b6000610c6233848461257f565b6001905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e4d57610dcc82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e5884848461266a565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f38906136c4565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60075481565b60085481565b60006001600a541461101a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611011906137c4565b60405180910390fd5b6000600a8190555060008061102d610bf8565b50915091506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161108f9190613474565b60206040518083038186803b1580156110a757600080fd5b505afa1580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df9190613013565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161113e9190613474565b60206040518083038186803b15801561115657600080fd5b505afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e9190613013565b905060006111b5856dffffffffffffffffffffffffffff168461223290919063ffffffff16565b905060006111dc856dffffffffffffffffffffffffffff168461223290919063ffffffff16565b905060006111ea87876127fe565b9050600080549050600081141561123e5761122a6103e861121c61121786886121c590919063ffffffff16565b6129dc565b61223290919063ffffffff16565b985061123960006103e8612a56565b6112a5565b6112a2886dffffffffffffffffffffffffffff1661126583876121c590919063ffffffff16565b61126f91906139dd565b886dffffffffffffffffffffffffffff1661129384876121c590919063ffffffff16565b61129d91906139dd565b612b70565b98505b600089116112e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112df90613724565b60405180910390fd5b6112f28a8a612a56565b6112fe86868a8a61228b565b81156113765761136f6006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6009819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f85856040516113be92919061387f565b60405180910390a250505050505050506001600a81905550919050565b60016020528060005260406000206000915090505481565b60095481565b60036020528060005260406000206000915090505481565b6000806001600a5414611459576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611450906137c4565b60405180910390fd5b6000600a8190555060008061146c610bf8565b50915091506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114fa9190613474565b60206040518083038186803b15801561151257600080fd5b505afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190613013565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115879190613474565b60206040518083038186803b15801561159f57600080fd5b505afa1580156115b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d79190613013565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061162988886127fe565b90506000805490508061164586856121c590919063ffffffff16565b61164f91906139dd565b9a508061166585856121c590919063ffffffff16565b61166f91906139dd565b995060008b118015611681575060008a115b6116c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b7906137a4565b60405180910390fd5b6116ca3084612b89565b6116d5878d8d61203b565b6116e0868d8c61203b565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117199190613474565b60206040518083038186803b15801561173157600080fd5b505afa158015611745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117699190613013565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117a49190613474565b60206040518083038186803b1580156117bc57600080fd5b505afa1580156117d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f49190613013565b935061180285858b8b61228b565b811561187a576118736006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6009819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d6040516118d992919061387f565b60405180910390a35050505050505050506001600a81905550915091565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b600061193d33848461266a565b6001905092915050565b6103e881565b6001600a5414611992576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611989906137c4565b60405180910390fd5b6000600a819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ab98284611ab4600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a569190613474565b60206040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa69190613013565b61223290919063ffffffff16565b61203b565b611b8a8184611b856006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b279190613474565b60206040518083038186803b158015611b3f57600080fd5b505afa158015611b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b779190613013565b61223290919063ffffffff16565b61203b565b50506001600a8190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1b90613764565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611cbe90613c19565b919050558a604051602001611cd89695949392919061353c565b60405160208183030381529060405280519060200120604051602001611cff92919061343d565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611d3c949392919061359d565b6020604051602081039080840390855afa158015611d5e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611dd257508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0890613644565b60405180910390fd5b611e1c89898961257f565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600a5414611e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e88906137c4565b60405180910390fd5b6000600a81905550612031600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ef79190613474565b60206040518083038186803b158015611f0f57600080fd5b505afa158015611f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f479190613013565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611fa29190613474565b60206040518083038186803b158015611fba57600080fd5b505afa158015611fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff29190613013565b600660009054906101000a90046dffffffffffffffffffffffffffff166006600e9054906101000a90046dffffffffffffffffffffffffffff1661228b565b6001600a81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856040516024016120a592919061348f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161210f9190613426565b6000604051808303816000865af19150503d806000811461214c576040519150601f19603f3d011682016040523d82523d6000602084013e612151565b606091505b509150915081801561217f575060008151148061217e57508080602001905181019061217d9190612fea565b5b5b6121be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b590613664565b60405180910390fd5b5050505050565b6000808214806121ed5750828283856121de9190613a64565b9250826121eb91906139dd565b145b61222c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222390613684565b60405180910390fd5b92915050565b60008282846122419190613abe565b9150811115612285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227c90613604565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156122bb57506dffffffffffffffffffffffffffff80168311155b6122fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f190613624565b60405180910390fd5b60006401000000004261230d9190613c6c565b905060006006601c9054906101000a900463ffffffff168261232f9190613af2565b905060008163ffffffff1611801561235857506000846dffffffffffffffffffffffffffff1614155b801561237557506000836dffffffffffffffffffffffffffff1614155b1561247b578063ffffffff166123ba8561238e86612ca3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612cd790919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123e29190613a64565b600760008282546123f39190613956565b925050819055508063ffffffff1661243a8461240e87612ca3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612cd790919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166124629190613a64565b600860008282546124739190613956565b925050819055505b85600660006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846006600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816006601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600660009054906101000a90046dffffffffffffffffffffffffffff166006600e9054906101000a90046dffffffffffffffffffffffffffff1660405161256f929190613804565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161265d9190613864565b60405180910390a3505050565b6126bc81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061275181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cfd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127f19190613864565b60405180910390a3505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561286757600080fd5b505afa15801561287b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061289f9190612e5c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600954905082156129c257600081146129bd576000612926612921866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6129dc565b90506000612933836129dc565b9050808211156129ba576000612966612955838561223290919063ffffffff16565b6000546121c590919063ffffffff16565b90506000612990836129826003876121c590919063ffffffff16565b612cfd90919063ffffffff16565b9050600081836129a091906139dd565b905060008111156129b6576129b58782612a56565b5b5050505b50505b6129d4565b600081146129d35760006009819055505b5b505092915050565b60006003821115612a4357819050600060016002846129fb91906139dd565b612a059190613956565b90505b81811015612a3d578091506002818285612a2291906139dd565b612a2c9190613956565b612a3691906139dd565b9050612a08565b50612a51565b60008214612a5057600190505b5b919050565b612a6b81600054612cfd90919063ffffffff16565b600081905550612ac381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cfd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b649190613864565b60405180910390a35050565b6000818310612b7f5781612b81565b825b905092915050565b612bdb81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c338160005461223290919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612c979190613864565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612cd09190613a0e565b9050919050565b6000816dffffffffffffffffffffffffffff1683612cf591906139ac565b905092915050565b6000828284612d0c9190613956565b9150811015612d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d47906136a4565b60405180910390fd5b92915050565b600081359050612d6581614037565b92915050565b600081519050612d7a81614037565b92915050565b600081519050612d8f8161404e565b92915050565b600081359050612da481614065565b92915050565b60008083601f840112612dbc57600080fd5b8235905067ffffffffffffffff811115612dd557600080fd5b602083019150836001820283011115612ded57600080fd5b9250929050565b600081359050612e038161407c565b92915050565b600081519050612e188161407c565b92915050565b600081359050612e2d81614093565b92915050565b600060208284031215612e4557600080fd5b6000612e5384828501612d56565b91505092915050565b600060208284031215612e6e57600080fd5b6000612e7c84828501612d6b565b91505092915050565b60008060408385031215612e9857600080fd5b6000612ea685828601612d56565b9250506020612eb785828601612d56565b9150509250929050565b600080600060608486031215612ed657600080fd5b6000612ee486828701612d56565b9350506020612ef586828701612d56565b9250506040612f0686828701612df4565b9150509250925092565b600080600080600080600060e0888a031215612f2b57600080fd5b6000612f398a828b01612d56565b9750506020612f4a8a828b01612d56565b9650506040612f5b8a828b01612df4565b9550506060612f6c8a828b01612df4565b9450506080612f7d8a828b01612e1e565b93505060a0612f8e8a828b01612d95565b92505060c0612f9f8a828b01612d95565b91505092959891949750929550565b60008060408385031215612fc157600080fd5b6000612fcf85828601612d56565b9250506020612fe085828601612df4565b9150509250929050565b600060208284031215612ffc57600080fd5b600061300a84828501612d80565b91505092915050565b60006020828403121561302557600080fd5b600061303384828501612e09565b91505092915050565b60008060008060006080868803121561305457600080fd5b600061306288828901612df4565b955050602061307388828901612df4565b945050604061308488828901612d56565b935050606086013567ffffffffffffffff8111156130a157600080fd5b6130ad88828901612daa565b92509250509295509295909350565b6130c581613b26565b82525050565b6130d481613b38565b82525050565b6130e381613b44565b82525050565b6130fa6130f582613b44565b613c62565b82525050565b600061310c838561391e565b9350613119838584613bd7565b61312283613cfb565b840190509392505050565b600061313882613908565b613142818561392f565b9350613152818560208601613be6565b80840191505092915050565b600061316982613913565b613173818561393a565b9350613183818560208601613be6565b61318c81613cfb565b840191505092915050565b60006131a460158361393a565b91506131af82613d0c565b602082019050919050565b60006131c7600f8361393a565b91506131d282613d35565b602082019050919050565b60006131ea60188361393a565b91506131f582613d5e565b602082019050919050565b600061320d60168361393a565b915061321882613d87565b602082019050919050565b600061323060148361393a565b915061323b82613db0565b602082019050919050565b600061325360028361394b565b915061325e82613dd9565b600282019050919050565b600061327660148361393a565b915061328182613e02565b602082019050919050565b600061329960108361393a565b91506132a482613e2b565b602082019050919050565b60006132bc601d8361393a565b91506132c782613e54565b602082019050919050565b60006132df60208361393a565b91506132ea82613e7d565b602082019050919050565b600061330260248361393a565b915061330d82613ea6565b604082019050919050565b600061332560088361393a565b915061333082613ef5565b602082019050919050565b6000613348600e8361393a565b915061335382613f1e565b602082019050919050565b600061336b60218361393a565b915061337682613f47565b604082019050919050565b600061338e60248361393a565b915061339982613f96565b604082019050919050565b60006133b1600d8361393a565b91506133bc82613fe5565b602082019050919050565b60006133d460118361393a565b91506133df8261400e565b602082019050919050565b6133f381613b4e565b82525050565b61340281613bb0565b82525050565b61341181613bba565b82525050565b61342081613bca565b82525050565b6000613432828461312d565b915081905092915050565b600061344882613246565b915061345482856130e9565b60208201915061346482846130e9565b6020820191508190509392505050565b600060208201905061348960008301846130bc565b92915050565b60006040820190506134a460008301856130bc565b6134b160208301846133f9565b9392505050565b60006080820190506134cd60008301886130bc565b6134da60208301876133f9565b6134e760408301866133f9565b81810360608301526134fa818486613100565b90509695505050505050565b600060208201905061351b60008301846130cb565b92915050565b600060208201905061353660008301846130da565b92915050565b600060c08201905061355160008301896130da565b61355e60208301886130bc565b61356b60408301876130bc565b61357860608301866133f9565b61358560808301856133f9565b61359260a08301846133f9565b979650505050505050565b60006080820190506135b260008301876130da565b6135bf6020830186613417565b6135cc60408301856130da565b6135d960608301846130da565b95945050505050565b600060208201905081810360008301526135fc818461315e565b905092915050565b6000602082019050818103600083015261361d81613197565b9050919050565b6000602082019050818103600083015261363d816131ba565b9050919050565b6000602082019050818103600083015261365d816131dd565b9050919050565b6000602082019050818103600083015261367d81613200565b9050919050565b6000602082019050818103600083015261369d81613223565b9050919050565b600060208201905081810360008301526136bd81613269565b9050919050565b600060208201905081810360008301526136dd8161328c565b9050919050565b600060208201905081810360008301526136fd816132af565b9050919050565b6000602082019050818103600083015261371d816132d2565b9050919050565b6000602082019050818103600083015261373d816132f5565b9050919050565b6000602082019050818103600083015261375d81613318565b9050919050565b6000602082019050818103600083015261377d8161333b565b9050919050565b6000602082019050818103600083015261379d8161335e565b9050919050565b600060208201905081810360008301526137bd81613381565b9050919050565b600060208201905081810360008301526137dd816133a4565b9050919050565b600060208201905081810360008301526137fd816133c7565b9050919050565b600060408201905061381960008301856133ea565b61382660208301846133ea565b9392505050565b600060608201905061384260008301866133ea565b61384f60208301856133ea565b61385c6040830184613408565b949350505050565b600060208201905061387960008301846133f9565b92915050565b600060408201905061389460008301856133f9565b6138a160208301846133f9565b9392505050565b60006080820190506138bd60008301876133f9565b6138ca60208301866133f9565b6138d760408301856133f9565b6138e460608301846133f9565b95945050505050565b60006020820190506139026000830184613417565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061396182613bb0565b915061396c83613bb0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156139a1576139a0613c9d565b5b828201905092915050565b60006139b782613b88565b91506139c283613b88565b9250826139d2576139d1613ccc565b5b828204905092915050565b60006139e882613bb0565b91506139f383613bb0565b925082613a0357613a02613ccc565b5b828204905092915050565b6000613a1982613b88565b9150613a2483613b88565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5957613a58613c9d565b5b828202905092915050565b6000613a6f82613bb0565b9150613a7a83613bb0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ab357613ab2613c9d565b5b828202905092915050565b6000613ac982613bb0565b9150613ad483613bb0565b925082821015613ae757613ae6613c9d565b5b828203905092915050565b6000613afd82613bba565b9150613b0883613bba565b925082821015613b1b57613b1a613c9d565b5b828203905092915050565b6000613b3182613b68565b9050919050565b60008115159050919050565b6000819050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015613c04578082015181840152602081019050613be9565b83811115613c13576000848401525b50505050565b6000613c2482613bb0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613c5757613c56613c9d565b5b600182019050919050565b6000819050919050565b6000613c7782613bb0565b9150613c8283613bb0565b925082613c9257613c91613ccc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b7f50616e64613a204f564552464c4f570000000000000000000000000000000000600082015250565b7f50616e64613a20494e56414c49445f5349474e41545552450000000000000000600082015250565b7f50616e64613a205452414e534645525f4641494c454400000000000000000000600082015250565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b7f50616e64613a20464f5242494444454e00000000000000000000000000000000600082015250565b7f50616e64613a20494e53554646494349454e545f4c4951554944495459000000600082015250565b7f50616e64613a20494e53554646494349454e545f494e5055545f414d4f554e54600082015250565b7f50616e64613a20494e53554646494349454e545f4c49515549444954595f4d4960008201527f4e54454400000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a204b000000000000000000000000000000000000000000000000600082015250565b7f50616e64613a2045585049524544000000000000000000000000000000000000600082015250565b7f50616e64613a20494e53554646494349454e545f4f55545055545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a20494e53554646494349454e545f4c49515549444954595f425560008201527f524e454400000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a204c4f434b454400000000000000000000000000000000000000600082015250565b7f50616e64613a20494e56414c49445f544f000000000000000000000000000000600082015250565b61404081613b26565b811461404b57600080fd5b50565b61405781613b38565b811461406257600080fd5b50565b61406e81613b44565b811461407957600080fd5b50565b61408581613bb0565b811461409057600080fd5b50565b61409c81613bca565b81146140a757600080fd5b5056fea2646970667358221220ca0b506d24c4a9595cfc11a0d16f090f04c86b9f81fc5c9ff5dd6444b81f5f7c64736f6c63430008040033a264697066735822122072bff107777068d66ef870df8f4adb4f80a511f32b0aa29c98fed8bdc600b68f64736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c80635855a25a116200006f5780635855a25a1462000141578063a2e74af61462000163578063c9c653961462000183578063e6a4390514620001b9578063f46901ed14620001ef57620000a0565b8063017e7e5814620000a5578063094b741514620000c75780631e3dd18b14620000e9578063574f2ba3146200011f575b600080fd5b620000af6200020f565b604051620000be919062000c87565b60405180910390f35b620000d162000233565b604051620000e0919062000c87565b60405180910390f35b62000107600480360381019062000101919062000af1565b62000259565b60405162000116919062000c87565b60405180910390f35b6200012962000299565b60405162000138919062000da3565b60405180910390f35b6200014b620002a6565b6040516200015a919062000cfe565b60405180910390f35b6200018160048036038101906200017b919062000a84565b620002f7565b005b620001a160048036038101906200019b919062000ab0565b620003ce565b604051620001b0919062000c87565b60405180910390f35b620001d76004803603810190620001d1919062000ab0565b62000930565b604051620001e6919062000c87565b60405180910390f35b6200020d600480360381019062000207919062000a84565b62000972565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200026a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b60405180602001620002b89062000a48565b6020820181038252601f19601f82011660405250604051602001620002de919062000c6e565b6040516020818303038152906040528051906020012081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200038a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003819062000d3d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004399062000d5f565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200048157838562000484565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620004fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004f29062000d81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000609576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006009062000d1b565b60405180910390fd5b6000604051806020016200061d9062000a48565b6020820181038252601f19601f820116604052509050600083836040516020016200064a92919062000c3e565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401620006ab92919062000ca4565b600060405180830381600087803b158015620006c657600080fd5b505af1158015620006db573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200091e92919062000cd1565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000a05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009fc9062000d3d565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6143208062000f7383390190565b60008135905062000a678162000f3e565b92915050565b60008135905062000a7e8162000f58565b92915050565b60006020828403121562000a9757600080fd5b600062000aa78482850162000a56565b91505092915050565b6000806040838503121562000ac457600080fd5b600062000ad48582860162000a56565b925050602062000ae78582860162000a56565b9150509250929050565b60006020828403121562000b0457600080fd5b600062000b148482850162000a6d565b91505092915050565b62000b288162000de7565b82525050565b62000b4362000b3d8262000de7565b62000e65565b82525050565b62000b548162000dfb565b82525050565b600062000b678262000dc0565b62000b73818562000dcb565b935062000b8581856020860162000e2f565b80840191505092915050565b600062000ba060128362000dd6565b915062000bad8262000e9a565b602082019050919050565b600062000bc760108362000dd6565b915062000bd48262000ec3565b602082019050919050565b600062000bee601a8362000dd6565b915062000bfb8262000eec565b602082019050919050565b600062000c1560138362000dd6565b915062000c228262000f15565b602082019050919050565b62000c388162000e25565b82525050565b600062000c4c828562000b2e565b60148201915062000c5e828462000b2e565b6014820191508190509392505050565b600062000c7c828462000b5a565b915081905092915050565b600060208201905062000c9e600083018462000b1d565b92915050565b600060408201905062000cbb600083018562000b1d565b62000cca602083018462000b1d565b9392505050565b600060408201905062000ce8600083018562000b1d565b62000cf7602083018462000c2d565b9392505050565b600060208201905062000d15600083018462000b49565b92915050565b6000602082019050818103600083015262000d368162000b91565b9050919050565b6000602082019050818103600083015262000d588162000bb8565b9050919050565b6000602082019050818103600083015262000d7a8162000bdf565b9050919050565b6000602082019050818103600083015262000d9c8162000c06565b9050919050565b600060208201905062000dba600083018462000c2d565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600062000df48262000e05565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000e4f57808201518184015260208101905062000e32565b8381111562000e5f576000848401525b50505050565b600062000e728262000e79565b9050919050565b600062000e868262000e8d565b9050919050565b60008160601b9050919050565b7f50616e64613a20504149525f4558495354530000000000000000000000000000600082015250565b7f50616e64613a20464f5242494444454e00000000000000000000000000000000600082015250565b7f50616e64613a204944454e544943414c5f414444524553534553000000000000600082015250565b7f50616e64613a205a45524f5f4144445245535300000000000000000000000000600082015250565b62000f498162000de7565b811462000f5557600080fd5b50565b62000f638162000e25565b811462000f6f57600080fd5b5056fe60c06040526001600a553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600b81526020017f50616e63616b65204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf9594939291906200015d565b6040516020818303038152906040528051906020012060808181525050503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505062000202565b6200013581620001ba565b82525050565b6200014681620001ce565b82525050565b6200015781620001f8565b82525050565b600060a0820190506200017460008301886200013b565b6200018360208301876200013b565b6200019260408301866200013b565b620001a160608301856200014c565b620001b060808301846200012a565b9695505050505050565b6000620001c782620001d8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60805160a05160601c6140e06200024060003960008181610eb501528181611b990152612803015260008181610e910152611c2801526140e06000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c3919061303c565b61054f565b005b6101d2610bbf565b6040516101df91906135e2565b60405180910390f35b6101f0610bf8565b6040516101ff9392919061382d565b60405180910390f35b610222600480360381019061021d9190612fae565b610c55565b60405161022f9190613506565b60405180910390f35b610240610c6c565b60405161024d9190613474565b60405180910390f35b61025e610c92565b60405161026b9190613864565b60405180910390f35b61028e60048036038101906102899190612ec1565b610c98565b60405161029b9190613506565b60405180910390f35b6102ac610e63565b6040516102b99190613521565b60405180910390f35b6102ca610e8a565b6040516102d791906138ed565b60405180910390f35b6102e8610e8f565b6040516102f59190613521565b60405180910390f35b61031860048036038101906103139190612e85565b610eb3565b005b610322610fc7565b60405161032f9190613864565b60405180910390f35b610340610fcd565b60405161034d9190613864565b60405180910390f35b610370600480360381019061036b9190612e33565b610fd3565b60405161037d9190613864565b60405180910390f35b6103a0600480360381019061039b9190612e33565b6113db565b6040516103ad9190613864565b60405180910390f35b6103be6113f3565b6040516103cb9190613864565b60405180910390f35b6103ee60048036038101906103e99190612e33565b6113f9565b6040516103fb9190613864565b60405180910390f35b61041e60048036038101906104199190612e33565b611411565b60405161042c92919061387f565b60405180910390f35b61043d6118f7565b60405161044a91906135e2565b60405180910390f35b61046d60048036038101906104689190612fae565b611930565b60405161047a9190613506565b60405180910390f35b61048b611947565b6040516104989190613864565b60405180910390f35b6104bb60048036038101906104b69190612e33565b61194d565b005b6104c5611b97565b6040516104d29190613474565b60405180910390f35b6104e3611bbb565b6040516104f09190613474565b60405180910390f35b610513600480360381019061050e9190612f10565b611be1565b005b61052f600480360381019061052a9190612e85565b611e27565b60405161053c9190613864565b60405180910390f35b61054d611e4c565b005b6001600a5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b906137c4565b60405180910390fd5b6000600a8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190613784565b60405180910390fd5b6000806105f5610bf8565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e906136e4565b60405180910390fd5b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906137e4565b60405180910390fd5b60008b111561077457610773828a8d61203b565b5b60008a111561078957610788818a8c61203b565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff16636d4117b1338d8d8c8c6040518663ffffffff1660e01b81526004016107d69594939291906134b8565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190613474565b60206040518083038186803b15801561085a57600080fd5b505afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190613013565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108cd9190613474565b60206040518083038186803b1580156108e557600080fd5b505afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d9190613013565b92505050600089856dffffffffffffffffffffffffffff1661093f9190613abe565b831161094c576000610974565b89856dffffffffffffffffffffffffffff166109689190613abe565b836109739190613abe565b5b9050600089856dffffffffffffffffffffffffffff166109949190613abe565b83116109a15760006109c9565b89856dffffffffffffffffffffffffffff166109bd9190613abe565b836109c89190613abe565b5b905060008211806109da5750600081115b610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090613704565b60405180910390fd5b6000610a55610a326002856121c590919063ffffffff16565b610a476103e8886121c590919063ffffffff16565b61223290919063ffffffff16565b90506000610a93610a706002856121c590919063ffffffff16565b610a856103e8886121c590919063ffffffff16565b61223290919063ffffffff16565b9050610add620f4240610acf896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6121c590919063ffffffff16565b610af082846121c590919063ffffffff16565b1015610b31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2890613744565b60405180910390fd5b5050610b3f8484888861228b565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610ba294939291906138a8565b60405180910390a35050505050506001600a819055505050505050565b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b6000806000600660009054906101000a90046dffffffffffffffffffffffffffff1692506006600e9054906101000a90046dffffffffffffffffffffffffffff1691506006601c9054906101000a900463ffffffff169050909192565b6000610c6233848461257f565b6001905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e4d57610dcc82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e5884848461266a565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f38906136c4565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60075481565b60085481565b60006001600a541461101a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611011906137c4565b60405180910390fd5b6000600a8190555060008061102d610bf8565b50915091506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161108f9190613474565b60206040518083038186803b1580156110a757600080fd5b505afa1580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df9190613013565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161113e9190613474565b60206040518083038186803b15801561115657600080fd5b505afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e9190613013565b905060006111b5856dffffffffffffffffffffffffffff168461223290919063ffffffff16565b905060006111dc856dffffffffffffffffffffffffffff168461223290919063ffffffff16565b905060006111ea87876127fe565b9050600080549050600081141561123e5761122a6103e861121c61121786886121c590919063ffffffff16565b6129dc565b61223290919063ffffffff16565b985061123960006103e8612a56565b6112a5565b6112a2886dffffffffffffffffffffffffffff1661126583876121c590919063ffffffff16565b61126f91906139dd565b886dffffffffffffffffffffffffffff1661129384876121c590919063ffffffff16565b61129d91906139dd565b612b70565b98505b600089116112e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112df90613724565b60405180910390fd5b6112f28a8a612a56565b6112fe86868a8a61228b565b81156113765761136f6006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6009819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f85856040516113be92919061387f565b60405180910390a250505050505050506001600a81905550919050565b60016020528060005260406000206000915090505481565b60095481565b60036020528060005260406000206000915090505481565b6000806001600a5414611459576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611450906137c4565b60405180910390fd5b6000600a8190555060008061146c610bf8565b50915091506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114fa9190613474565b60206040518083038186803b15801561151257600080fd5b505afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190613013565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115879190613474565b60206040518083038186803b15801561159f57600080fd5b505afa1580156115b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d79190613013565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061162988886127fe565b90506000805490508061164586856121c590919063ffffffff16565b61164f91906139dd565b9a508061166585856121c590919063ffffffff16565b61166f91906139dd565b995060008b118015611681575060008a115b6116c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b7906137a4565b60405180910390fd5b6116ca3084612b89565b6116d5878d8d61203b565b6116e0868d8c61203b565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117199190613474565b60206040518083038186803b15801561173157600080fd5b505afa158015611745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117699190613013565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117a49190613474565b60206040518083038186803b1580156117bc57600080fd5b505afa1580156117d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f49190613013565b935061180285858b8b61228b565b811561187a576118736006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6009819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d6040516118d992919061387f565b60405180910390a35050505050505050506001600a81905550915091565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b600061193d33848461266a565b6001905092915050565b6103e881565b6001600a5414611992576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611989906137c4565b60405180910390fd5b6000600a819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ab98284611ab4600660009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a569190613474565b60206040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa69190613013565b61223290919063ffffffff16565b61203b565b611b8a8184611b856006600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b279190613474565b60206040518083038186803b158015611b3f57600080fd5b505afa158015611b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b779190613013565b61223290919063ffffffff16565b61203b565b50506001600a8190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1b90613764565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611cbe90613c19565b919050558a604051602001611cd89695949392919061353c565b60405160208183030381529060405280519060200120604051602001611cff92919061343d565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611d3c949392919061359d565b6020604051602081039080840390855afa158015611d5e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611dd257508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0890613644565b60405180910390fd5b611e1c89898961257f565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600a5414611e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e88906137c4565b60405180910390fd5b6000600a81905550612031600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ef79190613474565b60206040518083038186803b158015611f0f57600080fd5b505afa158015611f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f479190613013565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611fa29190613474565b60206040518083038186803b158015611fba57600080fd5b505afa158015611fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff29190613013565b600660009054906101000a90046dffffffffffffffffffffffffffff166006600e9054906101000a90046dffffffffffffffffffffffffffff1661228b565b6001600a81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856040516024016120a592919061348f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161210f9190613426565b6000604051808303816000865af19150503d806000811461214c576040519150601f19603f3d011682016040523d82523d6000602084013e612151565b606091505b509150915081801561217f575060008151148061217e57508080602001905181019061217d9190612fea565b5b5b6121be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b590613664565b60405180910390fd5b5050505050565b6000808214806121ed5750828283856121de9190613a64565b9250826121eb91906139dd565b145b61222c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222390613684565b60405180910390fd5b92915050565b60008282846122419190613abe565b9150811115612285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227c90613604565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156122bb57506dffffffffffffffffffffffffffff80168311155b6122fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f190613624565b60405180910390fd5b60006401000000004261230d9190613c6c565b905060006006601c9054906101000a900463ffffffff168261232f9190613af2565b905060008163ffffffff1611801561235857506000846dffffffffffffffffffffffffffff1614155b801561237557506000836dffffffffffffffffffffffffffff1614155b1561247b578063ffffffff166123ba8561238e86612ca3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612cd790919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123e29190613a64565b600760008282546123f39190613956565b925050819055508063ffffffff1661243a8461240e87612ca3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612cd790919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166124629190613a64565b600860008282546124739190613956565b925050819055505b85600660006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846006600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816006601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600660009054906101000a90046dffffffffffffffffffffffffffff166006600e9054906101000a90046dffffffffffffffffffffffffffff1660405161256f929190613804565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161265d9190613864565b60405180910390a3505050565b6126bc81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061275181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cfd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127f19190613864565b60405180910390a3505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561286757600080fd5b505afa15801561287b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061289f9190612e5c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600954905082156129c257600081146129bd576000612926612921866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166121c590919063ffffffff16565b6129dc565b90506000612933836129dc565b9050808211156129ba576000612966612955838561223290919063ffffffff16565b6000546121c590919063ffffffff16565b90506000612990836129826003876121c590919063ffffffff16565b612cfd90919063ffffffff16565b9050600081836129a091906139dd565b905060008111156129b6576129b58782612a56565b5b5050505b50505b6129d4565b600081146129d35760006009819055505b5b505092915050565b60006003821115612a4357819050600060016002846129fb91906139dd565b612a059190613956565b90505b81811015612a3d578091506002818285612a2291906139dd565b612a2c9190613956565b612a3691906139dd565b9050612a08565b50612a51565b60008214612a5057600190505b5b919050565b612a6b81600054612cfd90919063ffffffff16565b600081905550612ac381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cfd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b649190613864565b60405180910390a35050565b6000818310612b7f5781612b81565b825b905092915050565b612bdb81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c338160005461223290919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612c979190613864565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612cd09190613a0e565b9050919050565b6000816dffffffffffffffffffffffffffff1683612cf591906139ac565b905092915050565b6000828284612d0c9190613956565b9150811015612d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d47906136a4565b60405180910390fd5b92915050565b600081359050612d6581614037565b92915050565b600081519050612d7a81614037565b92915050565b600081519050612d8f8161404e565b92915050565b600081359050612da481614065565b92915050565b60008083601f840112612dbc57600080fd5b8235905067ffffffffffffffff811115612dd557600080fd5b602083019150836001820283011115612ded57600080fd5b9250929050565b600081359050612e038161407c565b92915050565b600081519050612e188161407c565b92915050565b600081359050612e2d81614093565b92915050565b600060208284031215612e4557600080fd5b6000612e5384828501612d56565b91505092915050565b600060208284031215612e6e57600080fd5b6000612e7c84828501612d6b565b91505092915050565b60008060408385031215612e9857600080fd5b6000612ea685828601612d56565b9250506020612eb785828601612d56565b9150509250929050565b600080600060608486031215612ed657600080fd5b6000612ee486828701612d56565b9350506020612ef586828701612d56565b9250506040612f0686828701612df4565b9150509250925092565b600080600080600080600060e0888a031215612f2b57600080fd5b6000612f398a828b01612d56565b9750506020612f4a8a828b01612d56565b9650506040612f5b8a828b01612df4565b9550506060612f6c8a828b01612df4565b9450506080612f7d8a828b01612e1e565b93505060a0612f8e8a828b01612d95565b92505060c0612f9f8a828b01612d95565b91505092959891949750929550565b60008060408385031215612fc157600080fd5b6000612fcf85828601612d56565b9250506020612fe085828601612df4565b9150509250929050565b600060208284031215612ffc57600080fd5b600061300a84828501612d80565b91505092915050565b60006020828403121561302557600080fd5b600061303384828501612e09565b91505092915050565b60008060008060006080868803121561305457600080fd5b600061306288828901612df4565b955050602061307388828901612df4565b945050604061308488828901612d56565b935050606086013567ffffffffffffffff8111156130a157600080fd5b6130ad88828901612daa565b92509250509295509295909350565b6130c581613b26565b82525050565b6130d481613b38565b82525050565b6130e381613b44565b82525050565b6130fa6130f582613b44565b613c62565b82525050565b600061310c838561391e565b9350613119838584613bd7565b61312283613cfb565b840190509392505050565b600061313882613908565b613142818561392f565b9350613152818560208601613be6565b80840191505092915050565b600061316982613913565b613173818561393a565b9350613183818560208601613be6565b61318c81613cfb565b840191505092915050565b60006131a460158361393a565b91506131af82613d0c565b602082019050919050565b60006131c7600f8361393a565b91506131d282613d35565b602082019050919050565b60006131ea60188361393a565b91506131f582613d5e565b602082019050919050565b600061320d60168361393a565b915061321882613d87565b602082019050919050565b600061323060148361393a565b915061323b82613db0565b602082019050919050565b600061325360028361394b565b915061325e82613dd9565b600282019050919050565b600061327660148361393a565b915061328182613e02565b602082019050919050565b600061329960108361393a565b91506132a482613e2b565b602082019050919050565b60006132bc601d8361393a565b91506132c782613e54565b602082019050919050565b60006132df60208361393a565b91506132ea82613e7d565b602082019050919050565b600061330260248361393a565b915061330d82613ea6565b604082019050919050565b600061332560088361393a565b915061333082613ef5565b602082019050919050565b6000613348600e8361393a565b915061335382613f1e565b602082019050919050565b600061336b60218361393a565b915061337682613f47565b604082019050919050565b600061338e60248361393a565b915061339982613f96565b604082019050919050565b60006133b1600d8361393a565b91506133bc82613fe5565b602082019050919050565b60006133d460118361393a565b91506133df8261400e565b602082019050919050565b6133f381613b4e565b82525050565b61340281613bb0565b82525050565b61341181613bba565b82525050565b61342081613bca565b82525050565b6000613432828461312d565b915081905092915050565b600061344882613246565b915061345482856130e9565b60208201915061346482846130e9565b6020820191508190509392505050565b600060208201905061348960008301846130bc565b92915050565b60006040820190506134a460008301856130bc565b6134b160208301846133f9565b9392505050565b60006080820190506134cd60008301886130bc565b6134da60208301876133f9565b6134e760408301866133f9565b81810360608301526134fa818486613100565b90509695505050505050565b600060208201905061351b60008301846130cb565b92915050565b600060208201905061353660008301846130da565b92915050565b600060c08201905061355160008301896130da565b61355e60208301886130bc565b61356b60408301876130bc565b61357860608301866133f9565b61358560808301856133f9565b61359260a08301846133f9565b979650505050505050565b60006080820190506135b260008301876130da565b6135bf6020830186613417565b6135cc60408301856130da565b6135d960608301846130da565b95945050505050565b600060208201905081810360008301526135fc818461315e565b905092915050565b6000602082019050818103600083015261361d81613197565b9050919050565b6000602082019050818103600083015261363d816131ba565b9050919050565b6000602082019050818103600083015261365d816131dd565b9050919050565b6000602082019050818103600083015261367d81613200565b9050919050565b6000602082019050818103600083015261369d81613223565b9050919050565b600060208201905081810360008301526136bd81613269565b9050919050565b600060208201905081810360008301526136dd8161328c565b9050919050565b600060208201905081810360008301526136fd816132af565b9050919050565b6000602082019050818103600083015261371d816132d2565b9050919050565b6000602082019050818103600083015261373d816132f5565b9050919050565b6000602082019050818103600083015261375d81613318565b9050919050565b6000602082019050818103600083015261377d8161333b565b9050919050565b6000602082019050818103600083015261379d8161335e565b9050919050565b600060208201905081810360008301526137bd81613381565b9050919050565b600060208201905081810360008301526137dd816133a4565b9050919050565b600060208201905081810360008301526137fd816133c7565b9050919050565b600060408201905061381960008301856133ea565b61382660208301846133ea565b9392505050565b600060608201905061384260008301866133ea565b61384f60208301856133ea565b61385c6040830184613408565b949350505050565b600060208201905061387960008301846133f9565b92915050565b600060408201905061389460008301856133f9565b6138a160208301846133f9565b9392505050565b60006080820190506138bd60008301876133f9565b6138ca60208301866133f9565b6138d760408301856133f9565b6138e460608301846133f9565b95945050505050565b60006020820190506139026000830184613417565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061396182613bb0565b915061396c83613bb0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156139a1576139a0613c9d565b5b828201905092915050565b60006139b782613b88565b91506139c283613b88565b9250826139d2576139d1613ccc565b5b828204905092915050565b60006139e882613bb0565b91506139f383613bb0565b925082613a0357613a02613ccc565b5b828204905092915050565b6000613a1982613b88565b9150613a2483613b88565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5957613a58613c9d565b5b828202905092915050565b6000613a6f82613bb0565b9150613a7a83613bb0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ab357613ab2613c9d565b5b828202905092915050565b6000613ac982613bb0565b9150613ad483613bb0565b925082821015613ae757613ae6613c9d565b5b828203905092915050565b6000613afd82613bba565b9150613b0883613bba565b925082821015613b1b57613b1a613c9d565b5b828203905092915050565b6000613b3182613b68565b9050919050565b60008115159050919050565b6000819050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015613c04578082015181840152602081019050613be9565b83811115613c13576000848401525b50505050565b6000613c2482613bb0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613c5757613c56613c9d565b5b600182019050919050565b6000819050919050565b6000613c7782613bb0565b9150613c8283613bb0565b925082613c9257613c91613ccc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b7f50616e64613a204f564552464c4f570000000000000000000000000000000000600082015250565b7f50616e64613a20494e56414c49445f5349474e41545552450000000000000000600082015250565b7f50616e64613a205452414e534645525f4641494c454400000000000000000000600082015250565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b7f50616e64613a20464f5242494444454e00000000000000000000000000000000600082015250565b7f50616e64613a20494e53554646494349454e545f4c4951554944495459000000600082015250565b7f50616e64613a20494e53554646494349454e545f494e5055545f414d4f554e54600082015250565b7f50616e64613a20494e53554646494349454e545f4c49515549444954595f4d4960008201527f4e54454400000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a204b000000000000000000000000000000000000000000000000600082015250565b7f50616e64613a2045585049524544000000000000000000000000000000000000600082015250565b7f50616e64613a20494e53554646494349454e545f4f55545055545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a20494e53554646494349454e545f4c49515549444954595f425560008201527f524e454400000000000000000000000000000000000000000000000000000000602082015250565b7f50616e64613a204c4f434b454400000000000000000000000000000000000000600082015250565b7f50616e64613a20494e56414c49445f544f000000000000000000000000000000600082015250565b61404081613b26565b811461404b57600080fd5b50565b61405781613b38565b811461406257600080fd5b50565b61406e81613b44565b811461407957600080fd5b50565b61408581613bb0565b811461409057600080fd5b50565b61409c81613bca565b81146140a757600080fd5b5056fea2646970667358221220ca0b506d24c4a9595cfc11a0d16f090f04c86b9f81fc5c9ff5dd6444b81f5f7c64736f6c63430008040033a264697066735822122072bff107777068d66ef870df8f4adb4f80a511f32b0aa29c98fed8bdc600b68f64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:805:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:13",
                "type": ""
              }
            ],
            "src": "7:143:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:13",
                "type": ""
              }
            ],
            "src": "156:284:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "491:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "501:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "512:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "501:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "483:7:13",
                "type": ""
              }
            ],
            "src": "446:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "603:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "618:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "603:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "575:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "585:7:13",
                "type": ""
              }
            ],
            "src": "548:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "746:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "771:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "753:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "743:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "733:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:13",
                "type": ""
              }
            ],
            "src": "680:122:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9795:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:13",
                "type": ""
              }
            ],
            "src": "7:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:13",
                "type": ""
              }
            ],
            "src": "152:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:13",
                "type": ""
              }
            ],
            "src": "297:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:324:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "658:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "720:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "735:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "749:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "739:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "764:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "799:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "810:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "795:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "795:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "819:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "774:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "764:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "847:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "862:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "876:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "866:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "892:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "927:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "923:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "902:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "892:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "610:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "621:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "633:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "641:6:13",
                "type": ""
              }
            ],
            "src": "565:407:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1044:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1090:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1099:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1102:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1092:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1092:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1092:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1065:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1074:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1057:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1057:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1054:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1116:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1131:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1145:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1135:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1160:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1195:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1206:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1191:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1191:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1215:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1170:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1160:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1014:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1025:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1037:6:13",
                "type": ""
              }
            ],
            "src": "978:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1311:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1328:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1351:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1333:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1321:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1299:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1306:3:13",
                "type": ""
              }
            ],
            "src": "1246:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1453:74:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1470:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1513:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1495:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1475:19:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1475:45:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1463:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1463:58:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1441:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1448:3:13",
                "type": ""
              }
            ],
            "src": "1370:157:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1615:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1638:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1620:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1620:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1608:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1608:37:13"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1586:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1593:3:13",
                "type": ""
              }
            ],
            "src": "1533:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1765:265:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1775:52:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1821:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1789:31:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1789:38:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1779:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1836:95:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1919:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1924:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1843:75:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1843:88:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1836:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1966:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1973:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1962:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:16:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1980:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1985:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1940:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1940:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2001:23:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2012:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2017:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2008:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2008:16:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2001:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1746:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1753:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1761:3:13",
                "type": ""
              }
            ],
            "src": "1657:373:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2182:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2192:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2258:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2263:2:13",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2199:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2199:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2192:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2364:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                      "nodeType": "YulIdentifier",
                      "src": "2275:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2275:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2388:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2393:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2384:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2384:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2377:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2170:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2178:3:13",
                "type": ""
              }
            ],
            "src": "2036:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2554:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2564:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2630:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2635:2:13",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2571:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2564:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2736:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                      "nodeType": "YulIdentifier",
                      "src": "2647:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2749:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2760:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2765:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2756:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2749:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2542:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2550:3:13",
                "type": ""
              }
            ],
            "src": "2408:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2926:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2936:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3002:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3007:2:13",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2943:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2936:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3108:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                      "nodeType": "YulIdentifier",
                      "src": "3019:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3121:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3132:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3137:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3128:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3121:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2914:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2922:3:13",
                "type": ""
              }
            ],
            "src": "2780:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3298:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3308:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3374:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3379:2:13",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3315:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3315:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3308:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3480:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                      "nodeType": "YulIdentifier",
                      "src": "3391:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3391:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3493:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3504:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3509:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3500:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3493:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3286:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3294:3:13",
                "type": ""
              }
            ],
            "src": "3152:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3589:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3606:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3629:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3611:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3611:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3599:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3599:37:13"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3577:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3584:3:13",
                "type": ""
              }
            ],
            "src": "3524:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3792:253:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3865:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3874:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3803:61:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3803:75:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3803:75:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3887:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3898:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3903:2:13",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3894:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3887:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3978:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3987:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3916:61:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:75:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3916:75:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4000:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4011:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4016:2:13",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4007:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4000:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4029:10:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4036:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4029:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3763:3:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3769:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3777:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3788:3:13",
                "type": ""
              }
            ],
            "src": "3648:397:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4185:137:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4196:100:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4283:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4292:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4203:79:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:93:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4196:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4306:10:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4313:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4306:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4164:3:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4170:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4181:3:13",
                "type": ""
              }
            ],
            "src": "4051:271:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4426:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4436:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4448:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4459:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4444:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4444:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4436:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4516:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4529:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4540:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4525:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4472:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4472:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4472:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4398:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4410:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4421:4:13",
                "type": ""
              }
            ],
            "src": "4328:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4682:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4692:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4704:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4715:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4700:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4700:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4692:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4772:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4785:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4796:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4728:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4728:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4728:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4853:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4866:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4877:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4862:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4862:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4809:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4809:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4646:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4658:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4666:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4677:4:13",
                "type": ""
              }
            ],
            "src": "4556:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5020:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5030:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5042:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5053:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5038:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5038:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5030:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5110:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5123:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5134:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5119:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5119:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5066:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5066:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5066:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5191:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5204:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5215:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5200:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5200:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5147:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5147:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5147:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4984:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4996:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5004:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5015:4:13",
                "type": ""
              }
            ],
            "src": "4894:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5330:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5340:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5352:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5363:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5348:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5340:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5420:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5433:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5444:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5429:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5429:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5376:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5376:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5376:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5302:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5314:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5325:4:13",
                "type": ""
              }
            ],
            "src": "5232:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5631:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5641:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5653:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5664:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5649:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5649:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5641:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5688:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5699:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5684:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5684:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5707:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5713:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5703:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5703:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5677:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5677:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5733:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5867:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5741:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5733:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5611:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5626:4:13",
                "type": ""
              }
            ],
            "src": "5460:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6056:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6066:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6078:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6089:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6074:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6074:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6066:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6113:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6124:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6109:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6109:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6132:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6138:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6128:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6102:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6102:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6102:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6158:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6292:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6166:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6158:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6036:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6051:4:13",
                "type": ""
              }
            ],
            "src": "5885:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6481:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6491:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6503:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6514:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6499:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6491:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6538:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6549:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6534:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6534:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6557:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6563:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6553:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6553:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6527:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6527:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6527:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6583:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6717:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6591:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6583:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6461:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6476:4:13",
                "type": ""
              }
            ],
            "src": "6310:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6906:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6916:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6928:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6939:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6924:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6924:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6916:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6963:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6974:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6959:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6959:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6982:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6988:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6978:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6978:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6952:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6952:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7008:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7142:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7016:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7016:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7008:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6886:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6901:4:13",
                "type": ""
              }
            ],
            "src": "6735:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7258:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7268:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7280:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7291:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7276:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7268:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7348:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7361:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7372:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7357:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7357:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7304:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7304:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7304:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7230:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7242:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7253:4:13",
                "type": ""
              }
            ],
            "src": "7160:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7446:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7457:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7473:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7467:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7467:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7457:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7429:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7439:6:13",
                "type": ""
              }
            ],
            "src": "7388:98:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7605:34:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7615:18:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7630:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7615:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7577:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7582:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7593:11:13",
                "type": ""
              }
            ],
            "src": "7492:147:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7741:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7758:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7763:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7751:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7751:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7751:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7779:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7798:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7794:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7779:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7713:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7718:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7729:11:13",
                "type": ""
              }
            ],
            "src": "7645:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7865:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7875:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7904:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7886:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7886:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7875:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7847:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7857:7:13",
                "type": ""
              }
            ],
            "src": "7820:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7967:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7977:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7988:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7977:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7949:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7959:7:13",
                "type": ""
              }
            ],
            "src": "7922:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8050:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8060:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8075:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8082:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8071:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8071:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8060:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8032:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8042:7:13",
                "type": ""
              }
            ],
            "src": "8005:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8182:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8192:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8203:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8192:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8164:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8174:7:13",
                "type": ""
              }
            ],
            "src": "8137:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8269:258:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8279:10:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8288:1:13",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8283:1:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8348:63:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8373:3:13"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8378:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8369:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8369:11:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8392:3:13"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8397:1:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8388:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8388:11:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8382:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8382:18:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8362:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8362:39:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8362:39:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8309:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8312:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8306:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8306:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8320:19:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8322:15:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8331:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8334:2:13",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8327:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8327:10:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8322:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8302:3:13",
                    "statements": []
                  },
                  "src": "8298:113:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8445:76:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8495:3:13"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8500:6:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8491:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8491:16:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8509:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8484:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8484:27:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8484:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8426:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8429:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8423:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8423:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8420:2:13"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8251:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8256:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8261:6:13",
                "type": ""
              }
            ],
            "src": "8220:307:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8580:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8590:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8621:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8601:19:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8601:26:13"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "8590:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8562:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "8572:7:13",
                "type": ""
              }
            ],
            "src": "8533:100:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8686:47:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8696:31:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8721:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "8707:13:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8707:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "8696:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8668:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "8678:7:13",
                "type": ""
              }
            ],
            "src": "8639:94:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8781:52:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8791:35:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8816:2:13",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8820:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "8812:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8812:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "8791:8:13"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8762:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "8772:8:13",
                "type": ""
              }
            ],
            "src": "8739:94:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8945:62:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8967:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8975:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8963:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8963:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8979:20:13",
                        "type": "",
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8956:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8956:44:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8956:44:13"
                }
              ]
            },
            "name": "store_literal_in_memory_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8937:6:13",
                "type": ""
              }
            ],
            "src": "8839:168:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9119:60:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9141:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9149:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9137:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9137:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9153:18:13",
                        "type": "",
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9130:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9130:42:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9130:42:13"
                }
              ]
            },
            "name": "store_literal_in_memory_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9111:6:13",
                "type": ""
              }
            ],
            "src": "9013:166:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9291:70:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9313:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9321:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9309:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9309:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9325:28:13",
                        "type": "",
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9302:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9302:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9302:52:13"
                }
              ]
            },
            "name": "store_literal_in_memory_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9283:6:13",
                "type": ""
              }
            ],
            "src": "9185:176:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9473:63:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9495:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9503:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9491:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9491:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9507:21:13",
                        "type": "",
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9484:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9484:45:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9484:45:13"
                }
              ]
            },
            "name": "store_literal_in_memory_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9465:6:13",
                "type": ""
              }
            ],
            "src": "9367:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9585:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9642:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9651:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9654:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9644:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9644:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9644:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9608:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9633:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9615:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9615:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9605:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9605:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9598:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9598:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "9595:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9578:5:13",
                "type": ""
              }
            ],
            "src": "9542:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9713:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9770:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9779:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9782:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9772:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9772:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9772:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9736:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9761:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9743:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9743:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9733:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9733:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9726:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9726:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "9723:2:13"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9706:5:13",
                "type": ""
              }
            ],
            "src": "9670:122:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144(memPtr) {\n\n        mstore(add(memPtr, 0), \"Panda: PAIR_EXISTS\")\n\n    }\n\n    function store_literal_in_memory_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22(memPtr) {\n\n        mstore(add(memPtr, 0), \"Panda: FORBIDDEN\")\n\n    }\n\n    function store_literal_in_memory_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594(memPtr) {\n\n        mstore(add(memPtr, 0), \"Panda: IDENTICAL_ADDRESSES\")\n\n    }\n\n    function store_literal_in_memory_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25(memPtr) {\n\n        mstore(add(memPtr, 0), \"Panda: ZERO_ADDRESS\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "133:1810:2:-:0;;;483:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;540:12;526:11;;:26;;;;;;;;;;;;;;;;;;483:76;133:1810;;7:143:13;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;133:1810:2:-;;;;;;;",
  "deployedSourceMap": "133:1810:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;178;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1770:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;674:937;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1617:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;288:29;;;;;;;;;;;;:::o;323:35::-;;;;;;;;;;;;;:::o;442:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;565:103::-;623:4;646:8;:15;;;;639:22;;565:103;:::o;178:::-;251:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;234:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;224:57;;;;;;178:103;:::o;1770:171::-;1866:11;;;;;;;;;;;1852:25;;:10;:25;;;1844:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1922:12;1908:11;;:26;;;;;;;;;;;;;;;;;;1770:171;:::o;674:937::-;753:12;795:6;785:16;;:6;:16;;;;777:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;843:14;859;886:6;877:15;;:6;:15;;;:53;;915:6;923;877:53;;;896:6;904;877:53;842:88;;;;966:1;948:20;;:6;:20;;;;940:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1045:1;1010:37;;:7;:15;1018:6;1010:15;;;;;;;;;;;;;;;:23;1026:6;1010:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1002:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1110:21;1134:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1110:52;;1172:12;1214:6;1222;1197:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1187:43;;;;;;1172:58;;1318:4;1307:8;1301:15;1296:2;1286:8;1282:17;1279:1;1271:52;1263:60;;1353:4;1342:27;;;1370:6;1378;1342:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:4;1395:7;:15;1403:6;1395:15;;;;;;;;;;;;;;;:23;1411:6;1395:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1461:4;1435:7;:15;1443:6;1435:15;;;;;;;;;;;;;;;:23;1451:6;1435:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1520:8;1534:4;1520:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:6;1554:50;;1566:6;1554:50;;;1582:4;1588:8;:15;;;;1554:50;;;;;;;:::i;:::-;;;;;;;;674:937;;;;;;;;:::o;365:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1617:147::-;1701:11;;;;;;;;;;;1687:25;;:10;:25;;;1679:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1751:6;1743:5;;:14;;;;;;;;;;;;;;;;;;1617:147;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:13:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:262::-;1037:6;1086:2;1074:9;1065:7;1061:23;1057:32;1054:2;;;1102:1;1099;1092:12;1054:2;1145:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;:::i;:::-;1160:63;;1116:117;1044:196;;;;:::o;1246:118::-;1333:24;1351:5;1333:24;:::i;:::-;1328:3;1321:37;1311:53;;:::o;1370:157::-;1475:45;1495:24;1513:5;1495:24;:::i;:::-;1475:45;:::i;:::-;1470:3;1463:58;1453:74;;:::o;1533:118::-;1620:24;1638:5;1620:24;:::i;:::-;1615:3;1608:37;1598:53;;:::o;1657:373::-;1761:3;1789:38;1821:5;1789:38;:::i;:::-;1843:88;1924:6;1919:3;1843:88;:::i;:::-;1836:95;;1940:52;1985:6;1980:3;1973:4;1966:5;1962:16;1940:52;:::i;:::-;2017:6;2012:3;2008:16;2001:23;;1765:265;;;;;:::o;2036:366::-;2178:3;2199:67;2263:2;2258:3;2199:67;:::i;:::-;2192:74;;2275:93;2364:3;2275:93;:::i;:::-;2393:2;2388:3;2384:12;2377:19;;2182:220;;;:::o;2408:366::-;2550:3;2571:67;2635:2;2630:3;2571:67;:::i;:::-;2564:74;;2647:93;2736:3;2647:93;:::i;:::-;2765:2;2760:3;2756:12;2749:19;;2554:220;;;:::o;2780:366::-;2922:3;2943:67;3007:2;3002:3;2943:67;:::i;:::-;2936:74;;3019:93;3108:3;3019:93;:::i;:::-;3137:2;3132:3;3128:12;3121:19;;2926:220;;;:::o;3152:366::-;3294:3;3315:67;3379:2;3374:3;3315:67;:::i;:::-;3308:74;;3391:93;3480:3;3391:93;:::i;:::-;3509:2;3504:3;3500:12;3493:19;;3298:220;;;:::o;3524:118::-;3611:24;3629:5;3611:24;:::i;:::-;3606:3;3599:37;3589:53;;:::o;3648:397::-;3788:3;3803:75;3874:3;3865:6;3803:75;:::i;:::-;3903:2;3898:3;3894:12;3887:19;;3916:75;3987:3;3978:6;3916:75;:::i;:::-;4016:2;4011:3;4007:12;4000:19;;4036:3;4029:10;;3792:253;;;;;:::o;4051:271::-;4181:3;4203:93;4292:3;4283:6;4203:93;:::i;:::-;4196:100;;4313:3;4306:10;;4185:137;;;;:::o;4328:222::-;4421:4;4459:2;4448:9;4444:18;4436:26;;4472:71;4540:1;4529:9;4525:17;4516:6;4472:71;:::i;:::-;4426:124;;;;:::o;4556:332::-;4677:4;4715:2;4704:9;4700:18;4692:26;;4728:71;4796:1;4785:9;4781:17;4772:6;4728:71;:::i;:::-;4809:72;4877:2;4866:9;4862:18;4853:6;4809:72;:::i;:::-;4682:206;;;;;:::o;4894:332::-;5015:4;5053:2;5042:9;5038:18;5030:26;;5066:71;5134:1;5123:9;5119:17;5110:6;5066:71;:::i;:::-;5147:72;5215:2;5204:9;5200:18;5191:6;5147:72;:::i;:::-;5020:206;;;;;:::o;5232:222::-;5325:4;5363:2;5352:9;5348:18;5340:26;;5376:71;5444:1;5433:9;5429:17;5420:6;5376:71;:::i;:::-;5330:124;;;;:::o;5460:419::-;5626:4;5664:2;5653:9;5649:18;5641:26;;5713:9;5707:4;5703:20;5699:1;5688:9;5684:17;5677:47;5741:131;5867:4;5741:131;:::i;:::-;5733:139;;5631:248;;;:::o;5885:419::-;6051:4;6089:2;6078:9;6074:18;6066:26;;6138:9;6132:4;6128:20;6124:1;6113:9;6109:17;6102:47;6166:131;6292:4;6166:131;:::i;:::-;6158:139;;6056:248;;;:::o;6310:419::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6563:9;6557:4;6553:20;6549:1;6538:9;6534:17;6527:47;6591:131;6717:4;6591:131;:::i;:::-;6583:139;;6481:248;;;:::o;6735:419::-;6901:4;6939:2;6928:9;6924:18;6916:26;;6988:9;6982:4;6978:20;6974:1;6963:9;6959:17;6952:47;7016:131;7142:4;7016:131;:::i;:::-;7008:139;;6906:248;;;:::o;7160:222::-;7253:4;7291:2;7280:9;7276:18;7268:26;;7304:71;7372:1;7361:9;7357:17;7348:6;7304:71;:::i;:::-;7258:124;;;;:::o;7388:98::-;7439:6;7473:5;7467:12;7457:22;;7446:40;;;:::o;7492:147::-;7593:11;7630:3;7615:18;;7605:34;;;;:::o;7645:169::-;7729:11;7763:6;7758:3;7751:19;7803:4;7798:3;7794:14;7779:29;;7741:73;;;;:::o;7820:96::-;7857:7;7886:24;7904:5;7886:24;:::i;:::-;7875:35;;7865:51;;;:::o;7922:77::-;7959:7;7988:5;7977:16;;7967:32;;;:::o;8005:126::-;8042:7;8082:42;8075:5;8071:54;8060:65;;8050:81;;;:::o;8137:77::-;8174:7;8203:5;8192:16;;8182:32;;;:::o;8220:307::-;8288:1;8298:113;8312:6;8309:1;8306:13;8298:113;;;8397:1;8392:3;8388:11;8382:18;8378:1;8373:3;8369:11;8362:39;8334:2;8331:1;8327:10;8322:15;;8298:113;;;8429:6;8426:1;8423:13;8420:2;;;8509:1;8500:6;8495:3;8491:16;8484:27;8420:2;8269:258;;;;:::o;8533:100::-;8572:7;8601:26;8621:5;8601:26;:::i;:::-;8590:37;;8580:53;;;:::o;8639:94::-;8678:7;8707:20;8721:5;8707:20;:::i;:::-;8696:31;;8686:47;;;:::o;8739:94::-;8772:8;8820:5;8816:2;8812:14;8791:35;;8781:52;;;:::o;8839:168::-;8979:20;8975:1;8967:6;8963:14;8956:44;8945:62;:::o;9013:166::-;9153:18;9149:1;9141:6;9137:14;9130:42;9119:60;:::o;9185:176::-;9325:28;9321:1;9313:6;9309:14;9302:52;9291:70;:::o;9367:169::-;9507:21;9503:1;9495:6;9491:14;9484:45;9473:63;:::o;9542:122::-;9615:24;9633:5;9615:24;:::i;:::-;9608:5;9605:35;9595:2;;9654:1;9651;9644:12;9595:2;9585:79;:::o;9670:122::-;9743:24;9761:5;9743:24;:::i;:::-;9736:5;9733:35;9723:2;;9782:1;9779;9772:12;9723:2;9713:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4 <0.9.0;\n\nimport './interfaces/IPandaFactory.sol';\nimport './PandaPair.sol';\n\ncontract PandaFactory is IPandaFactory {\n    bytes32 public constant INIT_CODE_PAIR_HASH = keccak256(abi.encodePacked(type(PandaPair).creationCode));\n\n    address public override feeTo;\n    address public override feeToSetter;\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor(address _feeToSetter){\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view override returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\n        require(tokenA != tokenB, 'Panda: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Panda: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Panda: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(PandaPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IPandaPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external override {\n        require(msg.sender == feeToSetter, 'Panda: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external override {\n        require(msg.sender == feeToSetter, 'Panda: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "C:/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        2209
      ],
      "IPandaCallee": [
        1685
      ],
      "IPandaERC20": [
        1725
      ],
      "IPandaFactory": [
        1788
      ],
      "IPandaPair": [
        1918
      ],
      "Math": [
        1994
      ],
      "PandaERC20": [
        418
      ],
      "PandaFactory": [
        624
      ],
      "PandaPair": [
        1671
      ],
      "SafeMath": [
        2069
      ],
      "UQ112x112": [
        2113
      ]
    },
    "id": 625,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 420,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol",
        "file": "./interfaces/IPandaFactory.sol",
        "id": 421,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1789,
        "src": "65:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol",
        "file": "./PandaPair.sol",
        "id": 422,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1672,
        "src": "106:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 423,
              "name": "IPandaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1788,
              "src": "158:13:2"
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "158:13:2"
          }
        ],
        "contractDependencies": [
          1671
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 624,
        "linearizedBaseContracts": [
          624,
          1788
        ],
        "name": "PandaFactory",
        "nameLocation": "142:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "5855a25a",
            "id": 435,
            "mutability": "constant",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "202:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 624,
            "src": "178:103:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 425,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 430,
                            "name": "PandaPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "256:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          ],
                          "id": 429,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "251:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "251:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1671",
                          "typeString": "type(contract PandaPair)"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "251:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 427,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "234:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "234:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 433,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "234:46:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 426,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "224:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:57:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1742
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 438,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "312:5:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "303:8:2"
            },
            "scope": 624,
            "src": "288:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 436,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1747
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 441,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "347:11:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "338:8:2"
            },
            "scope": 624,
            "src": "323:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 439,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1756
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 448,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "429:7:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 447,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "420:8:2"
            },
            "scope": 624,
            "src": "365:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 446,
              "keyType": {
                "id": 442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 445,
                "keyType": {
                  "id": 443,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1763
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 452,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "468:8:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "459:8:2"
            },
            "scope": 624,
            "src": "442:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 449,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "442:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 450,
              "nodeType": "ArrayTypeName",
              "src": "442:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "516:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "526:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 458,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "540:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "526:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "526:26:2"
                }
              ]
            },
            "id": 462,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "503:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "495:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:22:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:2"
            },
            "scope": 624,
            "src": "483:76:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1768
            ],
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "629:39:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 468,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "646:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "646:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "639:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "574:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:2"
            },
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:2"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "623:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:6:2"
            },
            "scope": 624,
            "src": "565:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1777
            ],
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "767:844:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 483,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "785:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 484,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "795:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "785:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a204944454e544943414c5f414444524553534553",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "777:55:2"
                },
                {
                  "assignments": [
                    490,
                    492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "851:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "843:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 492,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "867:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "859:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 491,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 493,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "877:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 494,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "886:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 499,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 500,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "923:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 501,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "914:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "877:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 496,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "896:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 497,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "904:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 498,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "895:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 505,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "948:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "966:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 506,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "958:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a205a45524f5f41444452455353",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        },
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "940:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 515,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "1010:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 517,
                            "indexExpression": {
                              "id": 516,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "1018:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1010:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 519,
                          "indexExpression": {
                            "id": 518,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "1026:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1045:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1037:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1037:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1037:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1010:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20504149525f455849535453",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        },
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        }
                      ],
                      "id": 514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1002:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:68:2"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1123:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "1110:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 531,
                          "name": "PandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "1139:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        ],
                        "id": 530,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1671",
                        "typeString": "type(contract PandaPair)"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1134:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:52:2"
                },
                {
                  "assignments": [
                    536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1180:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "1172:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1172:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "1214:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 541,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "1222:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 538,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1197:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1197:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 537,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1187:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1172:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1249:84:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1263:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1296:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1282:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1282:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1301:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1318:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1271:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1263:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 529,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1286:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 529,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1307:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 480,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1263:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 536,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1318:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 545,
                  "nodeType": "InlineAssembly",
                  "src": "1240:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1370:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 547,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "1353:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 546,
                          "name": "IPandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1918,
                          "src": "1342:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPandaPair_$1918_$",
                            "typeString": "type(contract IPandaPair)"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPandaPair_$1918",
                          "typeString": "contract IPandaPair"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1917,
                      "src": "1342:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:43:2"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 554,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1395:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 557,
                        "indexExpression": {
                          "id": 555,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "1403:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1395:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 558,
                      "indexExpression": {
                        "id": 556,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1411:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1421:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:30:2"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 562,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "id": 563,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "1443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1435:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 566,
                      "indexExpression": {
                        "id": 564,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1451:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1435:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 567,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1461:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1534:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "1520:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1520:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 577,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 578,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1574:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 579,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1582:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 580,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "1588:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1588:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1737,
                      "src": "1554:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "EmitStatement",
                  "src": "1549:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "683:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 478,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "735:8:2"
            },
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "702:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "694:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "718:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "710:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "761:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "753:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:14:2"
            },
            "scope": 624,
            "src": "674:937:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1782
            ],
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "1669:95:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1687:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1687:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 594,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1687:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1714:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1679:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:54:2"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 599,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1743:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 600,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1751:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1626:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1660:8:2"
            },
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1643:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1635:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:16:2"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:0:2"
            },
            "scope": 624,
            "src": "1617:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1787
            ],
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1834:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 611,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1852:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1852:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 613,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "1866:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1844:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:54:2"
                },
                {
                  "expression": {
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 618,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "1908:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 619,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "1922:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1908:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1779:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1825:8:2"
            },
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1802:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1794:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:22:2"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:2"
            },
            "scope": 624,
            "src": "1770:171:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 625,
        "src": "133:1810:2",
        "usedErrors": []
      }
    ],
    "src": "32:1912:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        2209
      ],
      "IPandaCallee": [
        1685
      ],
      "IPandaERC20": [
        1725
      ],
      "IPandaFactory": [
        1788
      ],
      "IPandaPair": [
        1918
      ],
      "Math": [
        1994
      ],
      "PandaERC20": [
        418
      ],
      "PandaFactory": [
        624
      ],
      "PandaPair": [
        1671
      ],
      "SafeMath": [
        2069
      ],
      "UQ112x112": [
        2113
      ]
    },
    "id": 625,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 420,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol",
        "file": "./interfaces/IPandaFactory.sol",
        "id": 421,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1789,
        "src": "65:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol",
        "file": "./PandaPair.sol",
        "id": 422,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1672,
        "src": "106:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 423,
              "name": "IPandaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1788,
              "src": "158:13:2"
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "158:13:2"
          }
        ],
        "contractDependencies": [
          1671
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 624,
        "linearizedBaseContracts": [
          624,
          1788
        ],
        "name": "PandaFactory",
        "nameLocation": "142:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "5855a25a",
            "id": 435,
            "mutability": "constant",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "202:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 624,
            "src": "178:103:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 425,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 430,
                            "name": "PandaPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "256:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          ],
                          "id": 429,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "251:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "251:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1671",
                          "typeString": "type(contract PandaPair)"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "251:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 427,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "234:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "234:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 433,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "234:46:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 426,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "224:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:57:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1742
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 438,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "312:5:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "303:8:2"
            },
            "scope": 624,
            "src": "288:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 436,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1747
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 441,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "347:11:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "338:8:2"
            },
            "scope": 624,
            "src": "323:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 439,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1756
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 448,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "429:7:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 447,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "420:8:2"
            },
            "scope": 624,
            "src": "365:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 446,
              "keyType": {
                "id": 442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 445,
                "keyType": {
                  "id": 443,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1763
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 452,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "468:8:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "459:8:2"
            },
            "scope": 624,
            "src": "442:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 449,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "442:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 450,
              "nodeType": "ArrayTypeName",
              "src": "442:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "516:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "526:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 458,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "540:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "526:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "526:26:2"
                }
              ]
            },
            "id": 462,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "503:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "495:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:22:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:2"
            },
            "scope": 624,
            "src": "483:76:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1768
            ],
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "629:39:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 468,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "646:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "646:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "639:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "574:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:2"
            },
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:2"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "623:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:6:2"
            },
            "scope": 624,
            "src": "565:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1777
            ],
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "767:844:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 483,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "785:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 484,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "795:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "785:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a204944454e544943414c5f414444524553534553",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "777:55:2"
                },
                {
                  "assignments": [
                    490,
                    492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "851:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "843:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 492,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "867:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "859:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 491,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 493,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "877:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 494,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "886:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 499,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 500,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "923:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 501,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "914:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "877:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 496,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "896:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 497,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "904:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 498,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "895:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 505,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "948:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "966:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 506,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "958:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a205a45524f5f41444452455353",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        },
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "940:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 515,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "1010:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 517,
                            "indexExpression": {
                              "id": 516,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "1018:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1010:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 519,
                          "indexExpression": {
                            "id": 518,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "1026:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1045:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1037:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1037:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1037:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1010:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20504149525f455849535453",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        },
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        }
                      ],
                      "id": 514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1002:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:68:2"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1123:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "1110:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 531,
                          "name": "PandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "1139:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1671_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        ],
                        "id": 530,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1671",
                        "typeString": "type(contract PandaPair)"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1134:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:52:2"
                },
                {
                  "assignments": [
                    536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1180:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 584,
                      "src": "1172:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1172:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "1214:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 541,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "1222:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 538,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1197:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1197:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 537,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1187:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1172:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1249:84:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1263:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1296:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1282:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1282:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1301:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1318:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1271:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1263:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 529,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1286:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 529,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1307:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 480,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1263:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 536,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1318:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 545,
                  "nodeType": "InlineAssembly",
                  "src": "1240:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1370:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 547,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "1353:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 546,
                          "name": "IPandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1918,
                          "src": "1342:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPandaPair_$1918_$",
                            "typeString": "type(contract IPandaPair)"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPandaPair_$1918",
                          "typeString": "contract IPandaPair"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1917,
                      "src": "1342:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:43:2"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 554,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1395:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 557,
                        "indexExpression": {
                          "id": 555,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "1403:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1395:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 558,
                      "indexExpression": {
                        "id": 556,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1411:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1421:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:30:2"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 562,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "1435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "id": 563,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "1443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1435:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 566,
                      "indexExpression": {
                        "id": 564,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1451:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1435:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 567,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1461:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1534:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "1520:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1520:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 577,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 578,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1574:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 579,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1582:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 580,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "1588:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1588:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1737,
                      "src": "1554:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "EmitStatement",
                  "src": "1549:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "683:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 478,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "735:8:2"
            },
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "702:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "694:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "718:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "710:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "761:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "753:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:14:2"
            },
            "scope": 624,
            "src": "674:937:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1782
            ],
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "1669:95:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1687:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1687:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 594,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1687:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1714:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1679:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:54:2"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 599,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1743:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 600,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1751:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1626:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1660:8:2"
            },
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1643:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1635:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:16:2"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:0:2"
            },
            "scope": 624,
            "src": "1617:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1787
            ],
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1834:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 611,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1852:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1852:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 613,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "1866:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1844:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:54:2"
                },
                {
                  "expression": {
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 618,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "1908:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 619,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "1922:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1908:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1779:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1825:8:2"
            },
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1802:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1794:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:22:2"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:2"
            },
            "scope": 624,
            "src": "1770:171:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 625,
        "src": "133:1810:2",
        "usedErrors": []
      }
    ],
    "src": "32:1912:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-11T07:30:39.799Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}