{
  "contractName": "PandaFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_PAIR_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol\":\"PandaFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaERC20.sol\":{\"keccak256\":\"0x10e8e3a38047c3bed61af6741475b52546631b6b620352500dfa334bb42d4284\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5668db48002e3eda9d2401f76af729840dc0df191e2f6f6d3983466c0e501a12\",\"dweb:/ipfs/QmQ26KxcdrZ8unBSGSCFjSUZYcn9fHL1E5rYR7xqD3NX2m\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol\":{\"keccak256\":\"0x6926d0e01bfa633304c8f8b5811045a4efe502362471b21ff6746b05d4ef6f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://885b0f21f864afcfb3ee698e4f783a3fc660aae57007f6ca34d4c40b66004957\",\"dweb:/ipfs/QmWoooRgXxbqcTR3fXzubfaWh3WwRrrJPWMfmVccfFs8iD\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol\":{\"keccak256\":\"0x54ccbf37290aba481a253386ad84a35c43635206de3a8cf54b8e5020c1a6fd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f879769c5723ab32f4555a34332339df9274c3855ab9bc978a289aedd635b44d\",\"dweb:/ipfs/QmYrmT8SyBsfSarQy9AeQJHhqT4URGNHg7xfXLiHU7aYTR\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaCallee.sol\":{\"keccak256\":\"0xfc64b114936d608f6f89ddbed3f206bc752d653cabdec7976ad5c15d16b50f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ebca9fa455d189ec5b5107feb082dea8af8952eaddc995ee505c5a25026a441\",\"dweb:/ipfs/QmYnbY37caBZGcTh9KDpB2xxSLMGuM4cWtVmGs3rmoJ69g\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaERC20.sol\":{\"keccak256\":\"0x29c6742e1ec24dbd1fcc441eb2aae503a487b22ee1f15b212a334fce4ab2ef63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://929250ce66c72eb1c9f107f50a1503e6252c15011266f51003f93bbc4ce7ea41\",\"dweb:/ipfs/QmRXi1nvzcXG28WrSMiNd5XKwStBEufZ1drzw9dkpRwEho\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol\":{\"keccak256\":\"0x464ba64a612ab62f02190bb7354eb40e314e159bec1a2b91b5f2c2d497d04ba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76ab85d1f7f865f6b74fb585739bcdd412108bd1547a2b80ea4b3e8ad17399df\",\"dweb:/ipfs/QmTSs4UWPDBVfGnYPP3ZLmo5yJjR8cpg6emfAdMvdpU88t\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaPair.sol\":{\"keccak256\":\"0x55b2383fb9c8ffc57c2a91b9f033fc7bb79aeeee8ca76ca9a72bb7c816111e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52b205b3479d0ae9a27238dbd950cb300bd907668f4c6c0e9815baaa94d05e34\",\"dweb:/ipfs/Qman1zzGwqhwz3mh5gAbSppBqrfWtCM48obzVPxrw2Z8sa\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/libraries/Math.sol\":{\"keccak256\":\"0x1d3a60ce93c644abc23df956f8920e0b505ffc2fe68e7fff468b1df144eee981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://648f3c6efa4ce6041958d35b8141ba858562058593d08baebd6e46e22f830012\",\"dweb:/ipfs/QmUBcA2s2ZTPC9Yho5jRENzVq2YwmxgJm5HAm8ewJ7jc3i\"]},\"/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/libraries/UQ112x112.sol\":{\"keccak256\":\"0x450ceb0b1d7a2e96d9e09da205c0b28c577fb33c98fde4985ddf13af28c3a3a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5893f7b50e7465e3733874700b237341fbf3f6eaee2dd061c535b758b60627b9\",\"dweb:/ipfs/QmNY53c5aCt3Rv8fcf9cx2CibYZ8GsmcYoPSbh1skANW3p\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051612b2f380380612b2f83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b612a9c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635855a25a116100665780635855a25a14610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e936600461063d565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105e8565b6101eb565b005b6100ab61012b36600461060a565b61025f565b6100ab61013e36600461060a565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105e8565b610550565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105bf565b601f1982820381018352601f9091011660408190526101d29190602001610656565b6040516020818303038152906040528051906020012081565b6001546001600160a01b0316331461023d5760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102c35760405162461bcd60e51b815260206004820152601a60248201527f50616e64613a204944454e544943414c5f4144445245535345530000000000006044820152606401610234565b600080836001600160a01b0316856001600160a01b0316106102e65783856102e9565b84845b90925090506001600160a01b03821661033a5760405162461bcd60e51b815260206004820152601360248201527250616e64613a205a45524f5f4144445245535360681b6044820152606401610234565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103a45760405162461bcd60e51b815260206004820152601260248201527150616e64613a20504149525f45584953545360701b6044820152606401610234565b6000604051806020016103b6906105bf565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b0316331461059d5760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b6044820152606401610234565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6123d58061069283390190565b80356001600160a01b03811681146105e357600080fd5b919050565b6000602082840312156105fa57600080fd5b610603826105cc565b9392505050565b6000806040838503121561061d57600080fd5b610626836105cc565b9150610634602084016105cc565b90509250929050565b60006020828403121561064f57600080fd5b5035919050565b6000825160005b81811015610677576020818601810151858301520161065d565b81811115610686576000828501525b50919091019291505056fe60c06040526001600a5534801561001557600080fd5b50604080518082018252600981526850616e6461204c507360b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f3b1f132c385264ecb4daa4d8e750dd8151b070824064453dd0775755e1f650ef918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f198184030181529190528051602090910120608052503360601b60a05260805160a05160601c6122a16101346000396000818161041801528181610a740152611ad10152600081816102f3015261131401526122a16000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461043a578063d505accf1461044d578063dd62ed3e14610460578063fff6cae91461048b57600080fd5b8063ba9a7a56146103f7578063bc25cf7714610400578063c45a01551461041357600080fd5b80637ecebe00116100d35780637ecebe001461037657806389afcb441461039657806395d89b41146103be578063a9059cbb146103e457600080fd5b80636a6278421461033a57806370a082311461034d5780637464fc3d1461036d57600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ee578063485cc955146103155780635909c0d5146103285780635a3d54931461033157600080fd5b806323b872dd1461029a57806330adf81f146102ad578063313ce567146102d457600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610201578063095ea7b3146102355780630dfe16811461025857806318160ddd14610283575b600080fd5b6101c16101bc366004611f94565b610493565b005b6101eb6040518060400160405280600981526020016850616e6461204c507360b81b81525081565b6040516101f89190612092565b60405180910390f35b610209610995565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f8565b610248610243366004611f2d565b6109bf565b60405190151581526020016101f8565b60045461026b906001600160a01b031681565b6040516001600160a01b0390911681526020016101f8565b61028c60005481565b6040519081526020016101f8565b6102486102a8366004611e75565b6109d5565b61028c7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dc601281565b60405160ff90911681526020016101f8565b61028c7f000000000000000000000000000000000000000000000000000000000000000081565b6101c1610323366004611e3c565b610a69565b61028c60075481565b61028c60085481565b61028c610348366004611e02565b610b02565b61028c61035b366004611e02565b60016020526000908152604090205481565b61028c60095481565b61028c610384366004611e02565b60036020526000908152604090205481565b6103a96103a4366004611e02565b610de1565b604080519283526020830191909152016101f8565b6101eb60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6102486103f2366004611f2d565b611183565b61028c6103e881565b6101c161040e366004611e02565b611190565b61026b7f000000000000000000000000000000000000000000000000000000000000000081565b60055461026b906001600160a01b031681565b6101c161045b366004611eb6565b6112b7565b61028c61046e366004611e3c565b600260209081526000928352604080842090915290825290205481565b6101c16114e2565b600a546001146104be5760405162461bcd60e51b81526004016104b5906120c5565b60405180910390fd5b6000600a55841515806104d15750600084115b6105275760405162461bcd60e51b815260206004820152602160248201527f50616e64613a20494e53554646494349454e545f4f55545055545f414d4f554e6044820152601560fa1b60648201526084016104b5565b600080610532610995565b5091509150816001600160701b0316871080156105575750806001600160701b031686105b6105a35760405162461bcd60e51b815260206004820152601d60248201527f50616e64613a20494e53554646494349454e545f4c495155494449545900000060448201526064016104b5565b60045460055460009182916001600160a01b039182169190811690891682148015906105e15750806001600160a01b0316896001600160a01b031614155b6106215760405162461bcd60e51b815260206004820152601160248201527050616e64613a20494e56414c49445f544f60781b60448201526064016104b5565b8a1561063257610632828a8d611629565b891561064357610643818a8c611629565b86156106b057604051636d4117b160e01b81526001600160a01b038a1690636d4117b19061067d9033908f908f908e908e90600401612046565b600060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106ef57600080fd5b505afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190611f7b565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190611f7b565b92505050600089856001600160701b03166107bc919061218c565b83116107c95760006107e6565b6107dc8a6001600160701b03871661218c565b6107e6908461218c565b905060006107fd8a6001600160701b03871661218c565b831161080a576000610827565b61081d8a6001600160701b03871661218c565b610827908461218c565b905060008211806108385750600081115b6108845760405162461bcd60e51b815260206004820181905260248201527f50616e64613a20494e53554646494349454e545f494e5055545f414d4f554e5460448201526064016104b5565b60006108a661089484600261176d565b6108a0876103e861176d565b90611780565b905060006108b861089484600261176d565b90506108dd620f42406108d76001600160701b038b8116908b1661176d565b9061176d565b6108e7838361176d565b10156109205760405162461bcd60e51b815260206004820152600860248201526750616e64613a204b60c01b60448201526064016104b5565b505061092e8484888861178c565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600a55505050505050505050565b6006546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109cc338484611974565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a54576001600160a01b0384166000908152600260209081526040808320338452909152902054610a2f9083611780565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a5f8484846119d5565b5060019392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ad45760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b60448201526064016104b5565b600480546001600160a01b039384166001600160a01b03199182161790915560058054929093169116179055565b6000600a54600114610b265760405162461bcd60e51b81526004016104b5906120c5565b6000600a81905580610b36610995565b50600480546040516370a0823160e01b815230928101929092529294509092506000916001600160a01b0316906370a082319060240160206040518083038186803b158015610b8457600080fd5b505afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc9190611f7b565b6005546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611f7b565b90506000610c54836001600160701b038716611780565b90506000610c6b836001600160701b038716611780565b90506000610c798787611acc565b60005490915080610cb057610c9c6103e86108a0610c97878761176d565b611c23565b9850610cab60006103e8611c93565b610cf7565b610cf46001600160701b038916610cc7868461176d565b610cd1919061212a565b6001600160701b038916610ce5868561176d565b610cef919061212a565b611d22565b98505b60008911610d535760405162461bcd60e51b8152602060048201526024808201527f50616e64613a20494e53554646494349454e545f4c49515549444954595f4d496044820152631395115160e21b60648201526084016104b5565b610d5d8a8a611c93565b610d6986868a8a61178c565b8115610d9357600654610d8f906001600160701b0380821691600160701b90041661176d565b6009555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600a5550949695505050505050565b600080600a54600114610e065760405162461bcd60e51b81526004016104b5906120c5565b6000600a81905580610e16610995565b50600480546005546040516370a0823160e01b815230938101939093529395509193506001600160a01b0391821692919091169060009083906370a082319060240160206040518083038186803b158015610e7057600080fd5b505afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea89190611f7b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610eed57600080fd5b505afa158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190611f7b565b30600090815260016020526040812054919250610f428888611acc565b60005490915080610f53848761176d565b610f5d919061212a565b9a5080610f6a848661176d565b610f74919061212a565b995060008b118015610f86575060008a115b610fde5760405162461bcd60e51b8152602060048201526024808201527f50616e64613a20494e53554646494349454e545f4c49515549444954595f42556044820152631493915160e21b60648201526084016104b5565b610fe83084611d38565b610ff3878d8d611629565b610ffe868d8c611629565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561103d57600080fd5b505afa158015611051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110759190611f7b565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190611f7b565b93506110fd85858b8b61178c565b811561112757600654611123906001600160701b0380821691600160701b90041661176d565b6009555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600a81905550915091565b60006109cc3384846119d5565b600a546001146111b25760405162461bcd60e51b81526004016104b5906120c5565b6000600a55600480546005546006546040516370a0823160e01b815230948101949094526001600160a01b03928316939290911691611260918491869161125b916001600160701b039091169084906370a08231906024015b60206040518083038186803b15801561122357600080fd5b505afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190611f7b565b611629565b6006546040516370a0823160e01b81523060048201526112ad918391869161125b91600160701b9091046001600160701b0316906001600160a01b038516906370a082319060240161120b565b50506001600a5550565b428410156112f85760405162461bcd60e51b815260206004820152600e60248201526d14185b99184e881156141254915160921b60448201526064016104b5565b6001600160a01b038716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187611366836121f8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113df92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561144a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114805750886001600160a01b0316816001600160a01b0316145b6114cc5760405162461bcd60e51b815260206004820152601860248201527f50616e64613a20494e56414c49445f5349474e4154555245000000000000000060448201526064016104b5565b6114d7898989611974565b505050505050505050565b600a546001146115045760405162461bcd60e51b81526004016104b5906120c5565b6000600a55600480546040516370a0823160e01b81523092810192909252611622916001600160a01b03909116906370a082319060240160206040518083038186803b15801561155357600080fd5b505afa158015611567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158b9190611f7b565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116069190611f7b565b6006546001600160701b0380821691600160701b90041661178c565b6001600a55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916116b5919061202a565b6000604051808303816000865af19150503d80600081146116f2576040519150601f19603f3d011682016040523d82523d6000602084013e6116f7565b606091505b50915091508180156117215750805115806117215750808060200190518101906117219190611f59565b6117665760405162461bcd60e51b815260206004820152601660248201527514185b99184e881514905394d1915497d1905253115160521b60448201526064016104b5565b5050505050565b6000611779828461216d565b9392505050565b6000611779828461218c565b6001600160701b0384118015906117aa57506001600160701b038311155b6117e85760405162461bcd60e51b815260206004820152600f60248201526e50616e64613a204f564552464c4f5760881b60448201526064016104b5565b60006117f964010000000042612213565b60065490915060009061181990600160e01b900463ffffffff16836121a3565b905060008163ffffffff1611801561183957506001600160701b03841615155b801561184d57506001600160701b03831615155b156118dc578063ffffffff166118758561186686611dc2565b6001600160e01b031690611de1565b6001600160e01b0316611888919061216d565b6007600082825461189991906120ec565b909155505063ffffffff81166118b28461186687611dc2565b6001600160e01b03166118c5919061216d565b600860008282546118d691906120ec565b90915550505b6006805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831660009081526001602052604090205481811015611a305760405162461bcd60e51b815260206004820152600f60248201526e62616c6c616e636520746f206c6f7760881b60448201526064016104b5565b611a3a828261218c565b6001600160a01b038086166000908152600160205260408082209390935590851681522054611a6a9083906120ec565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611abe9086815260200190565b60405180910390a350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2857600080fd5b505afa158015611b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b609190611e1f565b6009546001600160a01b038216158015945091925090611c0f578015611c0a576000611b9b610c976001600160701b0388811690881661176d565b90506000611ba883611c23565b905080821115611c07576000611bca611bc18484611780565b6000549061176d565b90506000611be383611bdd86600361176d565b90611df6565b90506000611bf1828461212a565b90508015611c0357611c038782611c93565b5050505b50505b611c1b565b8015611c1b5760006009555b505092915050565b60006003821115611c845750806000611c3d60028361212a565b611c489060016120ec565b90505b81811015611c7e57905080600281611c63818661212a565b611c6d91906120ec565b611c77919061212a565b9050611c4b565b50919050565b8115611c8e575060015b919050565b600054611ca09082611df6565b60009081556001600160a01b038316815260016020526040902054611cc59082611df6565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d169085815260200190565b60405180910390a35050565b6000818310611d315781611779565b5090919050565b6001600160a01b038216600090815260016020526040902054611d5b9082611780565b6001600160a01b03831660009081526001602052604081209190915554611d829082611780565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611d16565b6000611ddb600160701b6001600160701b03841661213e565b92915050565b60006117796001600160701b03831684612104565b600061177982846120ec565b600060208284031215611e1457600080fd5b813561177981612253565b600060208284031215611e3157600080fd5b815161177981612253565b60008060408385031215611e4f57600080fd5b8235611e5a81612253565b91506020830135611e6a81612253565b809150509250929050565b600080600060608486031215611e8a57600080fd5b8335611e9581612253565b92506020840135611ea581612253565b929592945050506040919091013590565b600080600080600080600060e0888a031215611ed157600080fd5b8735611edc81612253565b96506020880135611eec81612253565b95506040880135945060608801359350608088013560ff81168114611f1057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611f4057600080fd5b8235611f4b81612253565b946020939093013593505050565b600060208284031215611f6b57600080fd5b8151801515811461177957600080fd5b600060208284031215611f8d57600080fd5b5051919050565b600080600080600060808688031215611fac57600080fd5b85359450602086013593506040860135611fc581612253565b9250606086013567ffffffffffffffff80821115611fe257600080fd5b818801915088601f830112611ff657600080fd5b81358181111561200557600080fd5b89602082850101111561201757600080fd5b9699959850939650602001949392505050565b6000825161203c8184602087016121c8565b9190910192915050565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60208152600082518060208401526120b18160408501602087016121c8565b601f01601f19169190910160400192915050565b6020808252600d908201526c14185b99184e881313d0d2d151609a1b604082015260600190565b600082198211156120ff576120ff612227565b500190565b60006001600160e01b038381168061211e5761211e61223d565b92169190910492915050565b6000826121395761213961223d565b500490565b60006001600160e01b038281168482168115158284048211161561216457612164612227565b02949350505050565b600081600019048311821515161561218757612187612227565b500290565b60008282101561219e5761219e612227565b500390565b600063ffffffff838116908316818110156121c0576121c0612227565b039392505050565b60005b838110156121e35781810151838201526020016121cb565b838111156121f2576000848401525b50505050565b600060001982141561220c5761220c612227565b5060010190565b6000826122225761222261223d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461226857600080fd5b5056fea26469706673582212202a91d12961cc5e317c66badd738f074a6c6266dd7fba4e3b0ee7c0442232eb0f64736f6c63430008050033a264697066735822122033a59d0cf19ff516e3308602fdca9accd37801a298c35cfa6d15fff9c8b08aa064736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80635855a25a116100665780635855a25a14610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e936600461063d565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105e8565b6101eb565b005b6100ab61012b36600461060a565b61025f565b6100ab61013e36600461060a565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105e8565b610550565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105bf565b601f1982820381018352601f9091011660408190526101d29190602001610656565b6040516020818303038152906040528051906020012081565b6001546001600160a01b0316331461023d5760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102c35760405162461bcd60e51b815260206004820152601a60248201527f50616e64613a204944454e544943414c5f4144445245535345530000000000006044820152606401610234565b600080836001600160a01b0316856001600160a01b0316106102e65783856102e9565b84845b90925090506001600160a01b03821661033a5760405162461bcd60e51b815260206004820152601360248201527250616e64613a205a45524f5f4144445245535360681b6044820152606401610234565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103a45760405162461bcd60e51b815260206004820152601260248201527150616e64613a20504149525f45584953545360701b6044820152606401610234565b6000604051806020016103b6906105bf565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b0316331461059d5760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b6044820152606401610234565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6123d58061069283390190565b80356001600160a01b03811681146105e357600080fd5b919050565b6000602082840312156105fa57600080fd5b610603826105cc565b9392505050565b6000806040838503121561061d57600080fd5b610626836105cc565b9150610634602084016105cc565b90509250929050565b60006020828403121561064f57600080fd5b5035919050565b6000825160005b81811015610677576020818601810151858301520161065d565b81811115610686576000828501525b50919091019291505056fe60c06040526001600a5534801561001557600080fd5b50604080518082018252600981526850616e6461204c507360b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f3b1f132c385264ecb4daa4d8e750dd8151b070824064453dd0775755e1f650ef918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f198184030181529190528051602090910120608052503360601b60a05260805160a05160601c6122a16101346000396000818161041801528181610a740152611ad10152600081816102f3015261131401526122a16000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461043a578063d505accf1461044d578063dd62ed3e14610460578063fff6cae91461048b57600080fd5b8063ba9a7a56146103f7578063bc25cf7714610400578063c45a01551461041357600080fd5b80637ecebe00116100d35780637ecebe001461037657806389afcb441461039657806395d89b41146103be578063a9059cbb146103e457600080fd5b80636a6278421461033a57806370a082311461034d5780637464fc3d1461036d57600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ee578063485cc955146103155780635909c0d5146103285780635a3d54931461033157600080fd5b806323b872dd1461029a57806330adf81f146102ad578063313ce567146102d457600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610201578063095ea7b3146102355780630dfe16811461025857806318160ddd14610283575b600080fd5b6101c16101bc366004611f94565b610493565b005b6101eb6040518060400160405280600981526020016850616e6461204c507360b81b81525081565b6040516101f89190612092565b60405180910390f35b610209610995565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f8565b610248610243366004611f2d565b6109bf565b60405190151581526020016101f8565b60045461026b906001600160a01b031681565b6040516001600160a01b0390911681526020016101f8565b61028c60005481565b6040519081526020016101f8565b6102486102a8366004611e75565b6109d5565b61028c7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dc601281565b60405160ff90911681526020016101f8565b61028c7f000000000000000000000000000000000000000000000000000000000000000081565b6101c1610323366004611e3c565b610a69565b61028c60075481565b61028c60085481565b61028c610348366004611e02565b610b02565b61028c61035b366004611e02565b60016020526000908152604090205481565b61028c60095481565b61028c610384366004611e02565b60036020526000908152604090205481565b6103a96103a4366004611e02565b610de1565b604080519283526020830191909152016101f8565b6101eb60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6102486103f2366004611f2d565b611183565b61028c6103e881565b6101c161040e366004611e02565b611190565b61026b7f000000000000000000000000000000000000000000000000000000000000000081565b60055461026b906001600160a01b031681565b6101c161045b366004611eb6565b6112b7565b61028c61046e366004611e3c565b600260209081526000928352604080842090915290825290205481565b6101c16114e2565b600a546001146104be5760405162461bcd60e51b81526004016104b5906120c5565b60405180910390fd5b6000600a55841515806104d15750600084115b6105275760405162461bcd60e51b815260206004820152602160248201527f50616e64613a20494e53554646494349454e545f4f55545055545f414d4f554e6044820152601560fa1b60648201526084016104b5565b600080610532610995565b5091509150816001600160701b0316871080156105575750806001600160701b031686105b6105a35760405162461bcd60e51b815260206004820152601d60248201527f50616e64613a20494e53554646494349454e545f4c495155494449545900000060448201526064016104b5565b60045460055460009182916001600160a01b039182169190811690891682148015906105e15750806001600160a01b0316896001600160a01b031614155b6106215760405162461bcd60e51b815260206004820152601160248201527050616e64613a20494e56414c49445f544f60781b60448201526064016104b5565b8a1561063257610632828a8d611629565b891561064357610643818a8c611629565b86156106b057604051636d4117b160e01b81526001600160a01b038a1690636d4117b19061067d9033908f908f908e908e90600401612046565b600060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106ef57600080fd5b505afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190611f7b565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190611f7b565b92505050600089856001600160701b03166107bc919061218c565b83116107c95760006107e6565b6107dc8a6001600160701b03871661218c565b6107e6908461218c565b905060006107fd8a6001600160701b03871661218c565b831161080a576000610827565b61081d8a6001600160701b03871661218c565b610827908461218c565b905060008211806108385750600081115b6108845760405162461bcd60e51b815260206004820181905260248201527f50616e64613a20494e53554646494349454e545f494e5055545f414d4f554e5460448201526064016104b5565b60006108a661089484600261176d565b6108a0876103e861176d565b90611780565b905060006108b861089484600261176d565b90506108dd620f42406108d76001600160701b038b8116908b1661176d565b9061176d565b6108e7838361176d565b10156109205760405162461bcd60e51b815260206004820152600860248201526750616e64613a204b60c01b60448201526064016104b5565b505061092e8484888861178c565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600a55505050505050505050565b6006546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109cc338484611974565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a54576001600160a01b0384166000908152600260209081526040808320338452909152902054610a2f9083611780565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a5f8484846119d5565b5060019392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ad45760405162461bcd60e51b815260206004820152601060248201526f2830b732309d102327a92124a22222a760811b60448201526064016104b5565b600480546001600160a01b039384166001600160a01b03199182161790915560058054929093169116179055565b6000600a54600114610b265760405162461bcd60e51b81526004016104b5906120c5565b6000600a81905580610b36610995565b50600480546040516370a0823160e01b815230928101929092529294509092506000916001600160a01b0316906370a082319060240160206040518083038186803b158015610b8457600080fd5b505afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc9190611f7b565b6005546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611f7b565b90506000610c54836001600160701b038716611780565b90506000610c6b836001600160701b038716611780565b90506000610c798787611acc565b60005490915080610cb057610c9c6103e86108a0610c97878761176d565b611c23565b9850610cab60006103e8611c93565b610cf7565b610cf46001600160701b038916610cc7868461176d565b610cd1919061212a565b6001600160701b038916610ce5868561176d565b610cef919061212a565b611d22565b98505b60008911610d535760405162461bcd60e51b8152602060048201526024808201527f50616e64613a20494e53554646494349454e545f4c49515549444954595f4d496044820152631395115160e21b60648201526084016104b5565b610d5d8a8a611c93565b610d6986868a8a61178c565b8115610d9357600654610d8f906001600160701b0380821691600160701b90041661176d565b6009555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600a5550949695505050505050565b600080600a54600114610e065760405162461bcd60e51b81526004016104b5906120c5565b6000600a81905580610e16610995565b50600480546005546040516370a0823160e01b815230938101939093529395509193506001600160a01b0391821692919091169060009083906370a082319060240160206040518083038186803b158015610e7057600080fd5b505afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea89190611f7b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610eed57600080fd5b505afa158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190611f7b565b30600090815260016020526040812054919250610f428888611acc565b60005490915080610f53848761176d565b610f5d919061212a565b9a5080610f6a848661176d565b610f74919061212a565b995060008b118015610f86575060008a115b610fde5760405162461bcd60e51b8152602060048201526024808201527f50616e64613a20494e53554646494349454e545f4c49515549444954595f42556044820152631493915160e21b60648201526084016104b5565b610fe83084611d38565b610ff3878d8d611629565b610ffe868d8c611629565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561103d57600080fd5b505afa158015611051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110759190611f7b565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190611f7b565b93506110fd85858b8b61178c565b811561112757600654611123906001600160701b0380821691600160701b90041661176d565b6009555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600a81905550915091565b60006109cc3384846119d5565b600a546001146111b25760405162461bcd60e51b81526004016104b5906120c5565b6000600a55600480546005546006546040516370a0823160e01b815230948101949094526001600160a01b03928316939290911691611260918491869161125b916001600160701b039091169084906370a08231906024015b60206040518083038186803b15801561122357600080fd5b505afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190611f7b565b611629565b6006546040516370a0823160e01b81523060048201526112ad918391869161125b91600160701b9091046001600160701b0316906001600160a01b038516906370a082319060240161120b565b50506001600a5550565b428410156112f85760405162461bcd60e51b815260206004820152600e60248201526d14185b99184e881156141254915160921b60448201526064016104b5565b6001600160a01b038716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187611366836121f8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113df92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561144a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114805750886001600160a01b0316816001600160a01b0316145b6114cc5760405162461bcd60e51b815260206004820152601860248201527f50616e64613a20494e56414c49445f5349474e4154555245000000000000000060448201526064016104b5565b6114d7898989611974565b505050505050505050565b600a546001146115045760405162461bcd60e51b81526004016104b5906120c5565b6000600a55600480546040516370a0823160e01b81523092810192909252611622916001600160a01b03909116906370a082319060240160206040518083038186803b15801561155357600080fd5b505afa158015611567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158b9190611f7b565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116069190611f7b565b6006546001600160701b0380821691600160701b90041661178c565b6001600a55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916116b5919061202a565b6000604051808303816000865af19150503d80600081146116f2576040519150601f19603f3d011682016040523d82523d6000602084013e6116f7565b606091505b50915091508180156117215750805115806117215750808060200190518101906117219190611f59565b6117665760405162461bcd60e51b815260206004820152601660248201527514185b99184e881514905394d1915497d1905253115160521b60448201526064016104b5565b5050505050565b6000611779828461216d565b9392505050565b6000611779828461218c565b6001600160701b0384118015906117aa57506001600160701b038311155b6117e85760405162461bcd60e51b815260206004820152600f60248201526e50616e64613a204f564552464c4f5760881b60448201526064016104b5565b60006117f964010000000042612213565b60065490915060009061181990600160e01b900463ffffffff16836121a3565b905060008163ffffffff1611801561183957506001600160701b03841615155b801561184d57506001600160701b03831615155b156118dc578063ffffffff166118758561186686611dc2565b6001600160e01b031690611de1565b6001600160e01b0316611888919061216d565b6007600082825461189991906120ec565b909155505063ffffffff81166118b28461186687611dc2565b6001600160e01b03166118c5919061216d565b600860008282546118d691906120ec565b90915550505b6006805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831660009081526001602052604090205481811015611a305760405162461bcd60e51b815260206004820152600f60248201526e62616c6c616e636520746f206c6f7760881b60448201526064016104b5565b611a3a828261218c565b6001600160a01b038086166000908152600160205260408082209390935590851681522054611a6a9083906120ec565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611abe9086815260200190565b60405180910390a350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2857600080fd5b505afa158015611b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b609190611e1f565b6009546001600160a01b038216158015945091925090611c0f578015611c0a576000611b9b610c976001600160701b0388811690881661176d565b90506000611ba883611c23565b905080821115611c07576000611bca611bc18484611780565b6000549061176d565b90506000611be383611bdd86600361176d565b90611df6565b90506000611bf1828461212a565b90508015611c0357611c038782611c93565b5050505b50505b611c1b565b8015611c1b5760006009555b505092915050565b60006003821115611c845750806000611c3d60028361212a565b611c489060016120ec565b90505b81811015611c7e57905080600281611c63818661212a565b611c6d91906120ec565b611c77919061212a565b9050611c4b565b50919050565b8115611c8e575060015b919050565b600054611ca09082611df6565b60009081556001600160a01b038316815260016020526040902054611cc59082611df6565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d169085815260200190565b60405180910390a35050565b6000818310611d315781611779565b5090919050565b6001600160a01b038216600090815260016020526040902054611d5b9082611780565b6001600160a01b03831660009081526001602052604081209190915554611d829082611780565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611d16565b6000611ddb600160701b6001600160701b03841661213e565b92915050565b60006117796001600160701b03831684612104565b600061177982846120ec565b600060208284031215611e1457600080fd5b813561177981612253565b600060208284031215611e3157600080fd5b815161177981612253565b60008060408385031215611e4f57600080fd5b8235611e5a81612253565b91506020830135611e6a81612253565b809150509250929050565b600080600060608486031215611e8a57600080fd5b8335611e9581612253565b92506020840135611ea581612253565b929592945050506040919091013590565b600080600080600080600060e0888a031215611ed157600080fd5b8735611edc81612253565b96506020880135611eec81612253565b95506040880135945060608801359350608088013560ff81168114611f1057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611f4057600080fd5b8235611f4b81612253565b946020939093013593505050565b600060208284031215611f6b57600080fd5b8151801515811461177957600080fd5b600060208284031215611f8d57600080fd5b5051919050565b600080600080600060808688031215611fac57600080fd5b85359450602086013593506040860135611fc581612253565b9250606086013567ffffffffffffffff80821115611fe257600080fd5b818801915088601f830112611ff657600080fd5b81358181111561200557600080fd5b89602082850101111561201757600080fd5b9699959850939650602001949392505050565b6000825161203c8184602087016121c8565b9190910192915050565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60208152600082518060208401526120b18160408501602087016121c8565b601f01601f19169190910160400192915050565b6020808252600d908201526c14185b99184e881313d0d2d151609a1b604082015260600190565b600082198211156120ff576120ff612227565b500190565b60006001600160e01b038381168061211e5761211e61223d565b92169190910492915050565b6000826121395761213961223d565b500490565b60006001600160e01b038281168482168115158284048211161561216457612164612227565b02949350505050565b600081600019048311821515161561218757612187612227565b500290565b60008282101561219e5761219e612227565b500390565b600063ffffffff838116908316818110156121c0576121c0612227565b039392505050565b60005b838110156121e35781810151838201526020016121cb565b838111156121f2576000848401525b50505050565b600060001982141561220c5761220c612227565b5060010190565b6000826122225761222261223d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461226857600080fd5b5056fea26469706673582212202a91d12961cc5e317c66badd738f074a6c6266dd7fba4e3b0ee7c0442232eb0f64736f6c63430008050033a264697066735822122033a59d0cf19ff516e3308602fdca9accd37801a298c35cfa6d15fff9c8b08aa064736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "204:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:50",
                "type": ""
              }
            ],
            "src": "14:290:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4154:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:50"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:50",
                "type": ""
              }
            ],
            "src": "14:173:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:50",
                "type": ""
              }
            ],
            "src": "192:186:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "480:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:50",
                "type": ""
              }
            ],
            "src": "383:260:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:110:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "764:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "773:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "766:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "766:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "766:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "739:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "748:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "735:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "735:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "760:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "731:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "731:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "728:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "789:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "812:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "789:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "684:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "695:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "707:6:50",
                "type": ""
              }
            ],
            "src": "648:180:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "980:186:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "990:41:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1004:26:50",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1000:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:31:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "994:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1047:3:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1060:2:50",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1064:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1056:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1056:15:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1073:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1052:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1052:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1040:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:37:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1040:37:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1097:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1102:2:50",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1093:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:12:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1115:2:50",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1119:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1111:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1111:15:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1128:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1086:46:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1152:3:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1157:2:50",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1141:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "948:3:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "953:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "961:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "972:3:50",
                "type": ""
              }
            ],
            "src": "833:333:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1308:289:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1318:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1338:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1332:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1322:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1354:10:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1363:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1358:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1425:77:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1450:3:50"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:1:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1446:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1446:11:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1473:6:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1481:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1469:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1469:14:50"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1485:4:50",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1465:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1465:25:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1459:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1459:32:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1439:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1439:53:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1439:53:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1384:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1387:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1381:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1395:21:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1397:17:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1406:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1409:4:50",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1402:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1402:12:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1397:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1377:3:50",
                    "statements": []
                  },
                  "src": "1373:129:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1528:31:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1546:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1537:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1537:16:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:27:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:27:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1517:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1520:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1514:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1514:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1511:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1568:23:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1579:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1584:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1575:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1568:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1284:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1289:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1300:3:50",
                "type": ""
              }
            ],
            "src": "1171:426:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1703:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1713:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1725:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1736:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1721:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1713:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1755:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1770:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1786:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1791:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1782:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1782:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1795:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1778:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1778:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1766:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1766:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1748:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1748:51:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1672:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1683:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1694:4:50",
                "type": ""
              }
            ],
            "src": "1602:203:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1939:175:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1949:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1961:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1972:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1957:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1949:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1984:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2007:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1998:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1994:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1988:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2029:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2044:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2052:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2040:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2022:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2022:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2076:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2087:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2072:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2072:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2096:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2104:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:43:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1900:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1911:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1919:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1930:4:50",
                "type": ""
              }
            ],
            "src": "1810:304:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2248:145:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2258:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2270:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2266:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2258:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2300:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2315:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2331:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2336:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2327:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2327:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2340:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2323:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2323:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2311:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2311:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2293:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2293:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2293:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2364:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2375:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2360:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2360:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2380:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2353:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2353:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2220:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2228:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2239:4:50",
                "type": ""
              }
            ],
            "src": "2119:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2499:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2509:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2521:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2517:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2509:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2551:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2562:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2544:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2544:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2468:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2479:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2490:4:50",
                "type": ""
              }
            ],
            "src": "2398:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:168:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2771:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2764:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2764:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2805:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2816:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2801:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2801:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2821:2:50",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2844:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2855:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2840:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2840:18:50"
                      },
                      {
                        "hexValue": "50616e64613a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2860:20:50",
                        "type": "",
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2833:48:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2833:48:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2890:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2902:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2913:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2898:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2890:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2731:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2745:4:50",
                "type": ""
              }
            ],
            "src": "2580:342:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:166:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3118:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3129:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3111:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3111:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3111:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3152:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3163:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3148:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3148:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3168:2:50",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3141:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3191:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3202:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3187:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3187:18:50"
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3207:18:50",
                        "type": "",
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3180:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3180:46:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3235:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3247:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3258:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3243:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3243:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3235:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3078:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3092:4:50",
                "type": ""
              }
            ],
            "src": "2927:340:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3446:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3463:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3474:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3456:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3497:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3508:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3493:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3493:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3513:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3486:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3486:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3536:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3547:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3532:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3532:18:50"
                      },
                      {
                        "hexValue": "50616e64613a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3552:28:50",
                        "type": "",
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3525:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3525:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3525:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3590:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3602:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3613:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3598:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3590:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3423:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3437:4:50",
                "type": ""
              }
            ],
            "src": "3272:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3801:169:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3818:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3829:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3811:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3811:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3852:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3863:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3848:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3848:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3868:2:50",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3841:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3891:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3902:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3887:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3887:18:50"
                      },
                      {
                        "hexValue": "50616e64613a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3907:21:50",
                        "type": "",
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3880:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3880:49:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3880:49:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3938:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3950:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3961:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3946:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3938:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3778:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3792:4:50",
                "type": ""
              }
            ],
            "src": "3627:343:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4076:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4086:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4098:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4109:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4094:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4086:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4128:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4139:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4121:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4121:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4045:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4056:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4067:4:50",
                "type": ""
              }
            ],
            "src": "3975:177:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Panda: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Panda: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Panda: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Panda: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "133:1810:2:-:0;;;483:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;526:11;:26;;-1:-1:-1;;;;;;526:26:2;-1:-1:-1;;;;;526:26:2;;;;;;;;;;133:1810;;14:290:50;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;153:1;150;143:12;105:2;179:16;;-1:-1:-1;;;;;224:31:50;;214:42;;204:2;;270:1;267;260:12;204:2;293:5;95:209;-1:-1:-1;;;95:209:50:o;:::-;133:1810:2;;;;;;",
  "deployedSourceMap": "133:1810:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:29;;;;;-1:-1:-1;;;;;288:29:2;;;;;;-1:-1:-1;;;;;1766:32:50;;;1748:51;;1736:2;1721:18;288:29:2;;;;;;;;323:35;;;;;-1:-1:-1;;;;;323:35:2;;;442:34;;;;;;:::i;:::-;;:::i;565:103::-;646:8;:15;565:103;;;2544:25:50;;;2532:2;2517:18;565:103:2;2499:76:50;178:103:2;;;:::i;1770:171::-;;;;;;:::i;:::-;;:::i;:::-;;674:937;;;;;;:::i;:::-;;:::i;365:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;365:71:2;;;1617:147;;;;;;:::i;:::-;;:::i;442:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;442:34:2;;-1:-1:-1;442:34:2;:::o;178:103::-;251:28;;;;;;;:::i;:::-;-1:-1:-1;;251:28:2;;;;;;;;;;;;;;;;234:46;;251:28;;234:46;;:::i;:::-;;;;;;;;;;;;;224:57;;;;;;178:103;:::o;1770:171::-;1866:11;;-1:-1:-1;;;;;1866:11:2;1852:10;:25;1844:54;;;;-1:-1:-1;;;1844:54:2;;3129:2:50;1844:54:2;;;3111:21:50;3168:2;3148:18;;;3141:30;-1:-1:-1;;;3187:18:50;;;3180:46;3243:18;;1844:54:2;;;;;;;;;1908:11;:26;;-1:-1:-1;;;;;;1908:26:2;-1:-1:-1;;;;;1908:26:2;;;;;;;;;;1770:171::o;674:937::-;753:12;795:6;-1:-1:-1;;;;;785:16:2;:6;-1:-1:-1;;;;;785:16:2;;;777:55;;;;-1:-1:-1;;;777:55:2;;3474:2:50;777:55:2;;;3456:21:50;3513:2;3493:18;;;3486:30;3552:28;3532:18;;;3525:56;3598:18;;777:55:2;3446:176:50;777:55:2;843:14;859;886:6;-1:-1:-1;;;;;877:15:2;:6;-1:-1:-1;;;;;877:15:2;;:53;;915:6;923;877:53;;;896:6;904;877:53;842:88;;-1:-1:-1;842:88:2;-1:-1:-1;;;;;;948:20:2;;940:52;;;;-1:-1:-1;;;940:52:2;;3829:2:50;940:52:2;;;3811:21:50;3868:2;3848:18;;;3841:30;-1:-1:-1;;;3887:18:50;;;3880:49;3946:18;;940:52:2;3801:169:50;940:52:2;-1:-1:-1;;;;;1010:15:2;;;1045:1;1010:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1002:68;;;;-1:-1:-1;;;1002:68:2;;2782:2:50;1002:68:2;;;2764:21:50;2821:2;2801:18;;;2794:30;-1:-1:-1;;;2840:18:50;;;2833:48;2898:18;;1002:68:2;2754:168:50;1002:68:2;1110:21;1134:28;;;;;;;;:::i;:::-;-1:-1:-1;;1134:28:2;;;;;;;;;;;;;;;;-1:-1:-1;;1060:2:50;1056:15;;;1052:24;;1134:28:2;1197:32;;1040:37:50;1111:15;;;1107:24;1093:12;;;1086:46;1134:28:2;;-1:-1:-1;1172:12:2;;1148::50;;1197:32:2;;;;;;;;;;;;1187:43;;;;;;1172:58;;1318:4;1307:8;1301:15;1296:2;1286:8;1282:17;1279:1;1271:52;1342:43;;-1:-1:-1;;;1342:43:2;;-1:-1:-1;;;;;2040:15:50;;;1342:43:2;;;2022:34:50;2092:15;;;2072:18;;;2065:43;1263:60:2;;-1:-1:-1;1342:27:2;;;;;;1957:18:50;;1342:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1395:15:2;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1395:30:2;;;;;;;;1435:15;;;;;;:23;;;;;;;;:30;;;;;;;;1520:8;:19;;-1:-1:-1;1520:19:2;;;;;;;;;;;;;;;;;;;;;;1588:15;;1554:50;;2293:51:50;;;2360:18;;;2353:34;1554:50:2;;2266:18:50;1554:50:2;;;;;;;767:844;;;;674:937;;;;:::o;1617:147::-;1701:11;;-1:-1:-1;;;;;1701:11:2;1687:10;:25;1679:54;;;;-1:-1:-1;;;1679:54:2;;3129:2:50;1679:54:2;;;3111:21:50;3168:2;3148:18;;;3141:30;-1:-1:-1;;;3187:18:50;;;3180:46;3243:18;;1679:54:2;3101:166:50;1679:54:2;1743:5;:14;;-1:-1:-1;;;;;;1743:14:2;-1:-1:-1;;;;;1743:14:2;;;;;;;;;;1617:147::o;-1:-1:-1:-;;;;;;;;:::o;14:173:50:-;82:20;;-1:-1:-1;;;;;131:31:50;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:50:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:180::-;707:6;760:2;748:9;739:7;735:23;731:32;728:2;;;776:1;773;766:12;728:2;-1:-1:-1;799:23:50;;718:110;-1:-1:-1;718:110:50:o;1171:426::-;1300:3;1338:6;1332:13;1363:1;1373:129;1387:6;1384:1;1381:13;1373:129;;;1485:4;1469:14;;;1465:25;;1459:32;1446:11;;;1439:53;1402:12;1373:129;;;1520:6;1517:1;1514:13;1511:2;;;1555:1;1546:6;1541:3;1537:16;1530:27;1511:2;-1:-1:-1;1575:16:50;;;;;1308:289;-1:-1:-1;;1308:289:50:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4 <0.9.0;\n\nimport './interfaces/IPandaFactory.sol';\nimport './PandaPair.sol';\n\ncontract PandaFactory is IPandaFactory {\n    bytes32 public constant INIT_CODE_PAIR_HASH = keccak256(abi.encodePacked(type(PandaPair).creationCode));\n\n    address public override feeTo;\n    address public override feeToSetter;\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor(address _feeToSetter){\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view override returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\n        require(tokenA != tokenB, 'Panda: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Panda: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Panda: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(PandaPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IPandaPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external override {\n        require(msg.sender == feeToSetter, 'Panda: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external override {\n        require(msg.sender == feeToSetter, 'Panda: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "C:/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        12110
      ],
      "IPandaCallee": [
        1695
      ],
      "IPandaERC20": [
        1735
      ],
      "IPandaFactory": [
        1798
      ],
      "IPandaPair": [
        1928
      ],
      "Math": [
        2004
      ],
      "PandaERC20": [
        427
      ],
      "PandaFactory": [
        633
      ],
      "PandaPair": [
        1681
      ],
      "SafeMath": [
        12422
      ],
      "UQ112x112": [
        2048
      ]
    },
    "id": 634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 429,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol",
        "file": "./interfaces/IPandaFactory.sol",
        "id": 430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 1799,
        "src": "65:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol",
        "file": "./PandaPair.sol",
        "id": 431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 1682,
        "src": "106:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 432,
              "name": "IPandaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1798,
              "src": "158:13:2"
            },
            "id": 433,
            "nodeType": "InheritanceSpecifier",
            "src": "158:13:2"
          }
        ],
        "contractDependencies": [
          1681
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 633,
        "linearizedBaseContracts": [
          633,
          1798
        ],
        "name": "PandaFactory",
        "nameLocation": "142:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "5855a25a",
            "id": 444,
            "mutability": "constant",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "202:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "178:103:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 434,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "PandaPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "256:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          ],
                          "id": 438,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "251:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "251:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1681",
                          "typeString": "type(contract PandaPair)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "251:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 436,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "234:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "234:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 442,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "234:46:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 435,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "224:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:57:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1752
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 447,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "312:5:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "303:8:2"
            },
            "scope": 633,
            "src": "288:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 445,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1757
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 450,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "347:11:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 449,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "338:8:2"
            },
            "scope": 633,
            "src": "323:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 448,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1766
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 457,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "429:7:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 456,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "420:8:2"
            },
            "scope": 633,
            "src": "365:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 455,
              "keyType": {
                "id": 451,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 454,
                "keyType": {
                  "id": 452,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 453,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1773
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 461,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "468:8:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "459:8:2"
            },
            "scope": 633,
            "src": "442:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 458,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "442:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 459,
              "nodeType": "ArrayTypeName",
              "src": "442:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "516:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "526:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 467,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "540:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "526:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "526:26:2"
                }
              ]
            },
            "id": 471,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "503:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "495:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:22:2"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:2"
            },
            "scope": 633,
            "src": "483:76:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1778
            ],
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "629:39:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 477,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "646:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "646:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 476,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "639:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "574:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 473,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:2"
            },
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:2"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "623:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:6:2"
            },
            "scope": 633,
            "src": "565:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1787
            ],
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "767:844:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 492,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "785:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 493,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "795:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "785:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a204944454e544943414c5f414444524553534553",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "777:55:2"
                },
                {
                  "assignments": [
                    499,
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "851:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "843:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "867:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "859:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 512,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 502,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "877:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 503,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "886:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 508,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 509,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "923:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 510,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "914:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "877:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 505,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "896:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 506,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "904:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "895:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "948:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "966:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 515,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "958:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a205a45524f5f41444452455353",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        },
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "940:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 524,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "1010:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 526,
                            "indexExpression": {
                              "id": 525,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "1018:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1010:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "1026:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1045:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1037:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 529,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1037:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1037:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1010:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20504149525f455849535453",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        },
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1002:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:68:2"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1123:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "1110:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 540,
                          "name": "PandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "1139:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        ],
                        "id": 539,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1681",
                        "typeString": "type(contract PandaPair)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1134:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:52:2"
                },
                {
                  "assignments": [
                    545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1180:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "1172:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1172:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 553,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 549,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "1214:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 550,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "1222:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 547,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1197:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1197:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 546,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1187:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1172:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1249:84:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1263:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1296:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1282:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1282:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1301:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1318:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1271:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1263:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1286:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1307:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 489,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1263:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 545,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1318:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 554,
                  "nodeType": "InlineAssembly",
                  "src": "1240:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 559,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1370:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 560,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 556,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1353:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 555,
                          "name": "IPandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "1342:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPandaPair_$1928_$",
                            "typeString": "type(contract IPandaPair)"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPandaPair_$1928",
                          "typeString": "contract IPandaPair"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "1342:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:43:2"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 563,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1395:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 566,
                        "indexExpression": {
                          "id": 564,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "1403:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1395:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "id": 565,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1411:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 568,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1421:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:30:2"
                },
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 571,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 574,
                        "indexExpression": {
                          "id": 572,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "1443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1435:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 575,
                      "indexExpression": {
                        "id": 573,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1451:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1435:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 576,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1461:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 582,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1534:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 579,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1520:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1520:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 586,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 587,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1574:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 588,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1582:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 589,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1588:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1588:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 585,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1554:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "1549:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "683:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 487,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "735:8:2"
            },
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "702:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "694:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "718:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "710:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:2"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "761:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "753:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:14:2"
            },
            "scope": 633,
            "src": "674:937:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1792
            ],
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "1669:95:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 601,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1687:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1687:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 603,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1687:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1714:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1679:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:54:2"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "1743:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "1751:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1626:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1660:8:2"
            },
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1643:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1635:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:16:2"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:0:2"
            },
            "scope": 633,
            "src": "1617:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1797
            ],
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "1834:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 620,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1852:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1852:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 622,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1866:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1844:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:54:2"
                },
                {
                  "expression": {
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 627,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "1908:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 628,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "1922:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1908:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1779:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 617,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1825:8:2"
            },
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1802:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "1794:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:22:2"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:2"
            },
            "scope": 633,
            "src": "1770:171:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 634,
        "src": "133:1810:2",
        "usedErrors": []
      }
    ],
    "src": "32:1912:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        12110
      ],
      "IPandaCallee": [
        1695
      ],
      "IPandaERC20": [
        1735
      ],
      "IPandaFactory": [
        1798
      ],
      "IPandaPair": [
        1928
      ],
      "Math": [
        2004
      ],
      "PandaERC20": [
        427
      ],
      "PandaFactory": [
        633
      ],
      "PandaPair": [
        1681
      ],
      "SafeMath": [
        12422
      ],
      "UQ112x112": [
        2048
      ]
    },
    "id": 634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 429,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/interfaces/IPandaFactory.sol",
        "file": "./interfaces/IPandaFactory.sol",
        "id": 430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 1799,
        "src": "65:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/skyne/Dev/work/skynet/HungryPandaHome/pandaswap/contracts/core/PandaPair.sol",
        "file": "./PandaPair.sol",
        "id": 431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 1682,
        "src": "106:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 432,
              "name": "IPandaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1798,
              "src": "158:13:2"
            },
            "id": 433,
            "nodeType": "InheritanceSpecifier",
            "src": "158:13:2"
          }
        ],
        "contractDependencies": [
          1681
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 633,
        "linearizedBaseContracts": [
          633,
          1798
        ],
        "name": "PandaFactory",
        "nameLocation": "142:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "5855a25a",
            "id": 444,
            "mutability": "constant",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "202:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "178:103:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 434,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "PandaPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "256:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                              "typeString": "type(contract PandaPair)"
                            }
                          ],
                          "id": 438,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "251:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "251:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1681",
                          "typeString": "type(contract PandaPair)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "251:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 436,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "234:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "234:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 442,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "234:46:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 435,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "224:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:57:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1752
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 447,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "312:5:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "303:8:2"
            },
            "scope": 633,
            "src": "288:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 445,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1757
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 450,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "347:11:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 449,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "338:8:2"
            },
            "scope": 633,
            "src": "323:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 448,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1766
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 457,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "429:7:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 456,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "420:8:2"
            },
            "scope": 633,
            "src": "365:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 455,
              "keyType": {
                "id": 451,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 454,
                "keyType": {
                  "id": 452,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 453,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1773
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 461,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "468:8:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "459:8:2"
            },
            "scope": 633,
            "src": "442:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 458,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "442:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 459,
              "nodeType": "ArrayTypeName",
              "src": "442:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "516:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "526:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 467,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "540:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "526:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "526:26:2"
                }
              ]
            },
            "id": 471,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "503:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "495:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:22:2"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:2"
            },
            "scope": 633,
            "src": "483:76:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1778
            ],
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "629:39:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 477,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "646:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "646:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 476,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "639:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "574:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 473,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:2"
            },
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:2"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "623:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:6:2"
            },
            "scope": 633,
            "src": "565:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1787
            ],
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "767:844:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 492,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "785:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 493,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "795:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "785:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a204944454e544943414c5f414444524553534553",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Panda: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68c58aedb9524db82ce1af5ebd6de389a9b29e515f474fff89bab988b0516594",
                          "typeString": "literal_string \"Panda: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "777:55:2"
                },
                {
                  "assignments": [
                    499,
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "851:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "843:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "867:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "859:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 512,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 502,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "877:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 503,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "886:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 508,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 509,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "923:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 510,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "914:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "877:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 505,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "896:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 506,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "904:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "895:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "948:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "966:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 515,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "958:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a205a45524f5f41444452455353",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        },
                        "value": "Panda: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_911a634f4305d9775ef71b5348364d1e9c7a78c277fb6b81b3efe51f36208c25",
                          "typeString": "literal_string \"Panda: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "940:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 524,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "1010:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 526,
                            "indexExpression": {
                              "id": 525,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "1018:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1010:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "1026:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1045:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1037:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 529,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1037:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1037:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1010:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20504149525f455849535453",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        },
                        "value": "Panda: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_180f288d184ede33a3e73ed72b3b6b5fefdbb172911dd18b8d22d5d60afe7144",
                          "typeString": "literal_string \"Panda: PAIR_EXISTS\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1002:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:68:2"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1123:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "1110:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 540,
                          "name": "PandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "1139:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PandaPair_$1681_$",
                            "typeString": "type(contract PandaPair)"
                          }
                        ],
                        "id": 539,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PandaPair_$1681",
                        "typeString": "type(contract PandaPair)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1134:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:52:2"
                },
                {
                  "assignments": [
                    545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1180:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "1172:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1172:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 553,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 549,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "1214:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 550,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "1222:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 547,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1197:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1197:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 546,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1187:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1172:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1249:84:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1263:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1296:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1282:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1282:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1301:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1318:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1271:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1263:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1286:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1307:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 489,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1263:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 545,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1318:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 554,
                  "nodeType": "InlineAssembly",
                  "src": "1240:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 559,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1370:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 560,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 556,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1353:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 555,
                          "name": "IPandaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "1342:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPandaPair_$1928_$",
                            "typeString": "type(contract IPandaPair)"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPandaPair_$1928",
                          "typeString": "contract IPandaPair"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "1342:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:43:2"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 563,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1395:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 566,
                        "indexExpression": {
                          "id": 564,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "1403:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1395:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "id": 565,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1411:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 568,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1421:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:30:2"
                },
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 571,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 574,
                        "indexExpression": {
                          "id": 572,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "1443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1435:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 575,
                      "indexExpression": {
                        "id": 573,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1451:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1435:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 576,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1461:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 582,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1534:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 579,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1520:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1520:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 586,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "1566:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 587,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1574:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 588,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1582:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 589,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1588:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1588:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 585,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1554:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "1549:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "683:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 487,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "735:8:2"
            },
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "702:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "694:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "718:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "710:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:2"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "761:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "753:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:14:2"
            },
            "scope": 633,
            "src": "674:937:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1792
            ],
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "1669:95:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 601,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1687:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1687:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 603,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1687:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1714:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1679:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:54:2"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "1743:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "1751:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1626:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1660:8:2"
            },
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1643:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1635:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:16:2"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:0:2"
            },
            "scope": 633,
            "src": "1617:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1797
            ],
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "1834:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 620,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1852:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1852:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 622,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "1866:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50616e64613a20464f5242494444454e",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        },
                        "value": "Panda: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584723a0af2fa62badc0449ab0159223c9f61f82949ec662c52b3d36132a3d22",
                          "typeString": "literal_string \"Panda: FORBIDDEN\""
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1844:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:54:2"
                },
                {
                  "expression": {
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 627,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "1908:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 628,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "1922:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1908:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1779:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 617,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1825:8:2"
            },
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1802:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "1794:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:22:2"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:2"
            },
            "scope": 633,
            "src": "1770:171:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 634,
        "src": "133:1810:2",
        "usedErrors": []
      }
    ],
    "src": "32:1912:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-11T09:03:34.345Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}